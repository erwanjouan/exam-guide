{
  "exam": {
    "domains": [
      {
        "content": "## This is the first domain for the certification\n",
        "id": "1",
        "name": "SDLC Automation (22%)",
        "taskStatements": [
          {
            "id": "1.1",
            "knowledgeOf": [
              {
                "content": "- [Concepts](https://aws.amazon.com/what-is/sdlc/#seo-faq-pairs#what-is-sdlc)\n- [Phases](https://aws.amazon.com/what-is/sdlc/#seo-faq-pairs#how-does-sdlc-work)\n  - Plan\n  - Design\n  - Plan\n  - Design\n  - Implement\n  - Test\n  - Deploy\n  - Maintain\n- [Models](https://aws.amazon.com/what-is/sdlc/#seo-faq-pairs#what-are-sdlc-models)\n  - Waterfall\n  - Iterative\n  - Spiral\n  - Agile\n",
                "name": "Software development lifecycle (SDLC), concepts, phases and models"
              },
              {
                "content": "### Patterns\n- [Blog:Deployment Pipeline Reference Architecture](https://aws.amazon.com/blogs/aws/new_deployment_pipelines_reference_architecture_and_-reference_implementations/)\n- [Blog:Automating safe, hands-off deployments](https://aws.amazon.com/builders-library/automating-safe-hands-off-deployments/) Claire Ligori article in [The Amazon Builders' Library](https://aws.amazon.com/builders-library/?cards-body.sort-by=item.additionalFields.sortDate\u0026cards-body.sort-order=desc\u0026awsf.filter-content-category=*all\u0026awsf.filter-content-type=*all\u0026awsf.filter-content-level=*all)\n### Single\n- Set up a CI/CD pipeline by using AWS CodePipeline and AWS CDK [prescriptive-guidance](https://docs.aws.amazon.com/prescriptive-guidance/latest/patterns/set-up-a-ci-cd-pipeline-by-using-aws-codepipeline-and-aws-cdk.html?did=pg_card\u0026trk=pg_card)\n### Multiple accounts\n- Use AWS CodeCommit and AWS CodePipeline to deploy a CI/CD pipeline in multiple AWS accounts [workshop](https://docs.aws.amazon.com/prescriptive-guidance/latest/patterns/use-aws-codecommit-and-aws-codepipeline-to-deploy-a-ci-cd-pipeline-in-multiple-aws-accounts.html)\n- Building a Cross-account CI/CD Pipeline [workshop](https://catalog.us-east-1.prod.workshops.aws/workshops/00bc829e-fd7c-4204-9da1-faea3cf8bd88/en-US)\n",
                "name": "Pipeline deployment patterns for single and multi-account environments"
              }
            ],
            "name": "Implement CI/CD pipelines",
            "skillsIn": [
              {
                "content": "### Code commit\n- [Setting up in User Guide](https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up.html)\n- HTTPS\n  - [Setup for HTTPS users using Git credentials](https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-gc.html)\n- SSH\n  - [Setup for SSH users not using the AWS CLI](https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-without-cli.html)\n- IAM\n  - [Identity and Access Management for AWS CodeCommit](https://docs.aws.amazon.com/codecommit/latest/userguide/security-iam.html)\n  - [How AWS CodeCommit works with IAM](https://docs.aws.amazon.com/codecommit/latest/userguide/security_iam_service-with-iam.html)\n### ECR\n- [Setting up in User Guide](https://docs.aws.amazon.com/AmazonECR/latest/userguide/get-set-up-for-amazon-ecr.html)\n### Code Artifact\n- [UserGuide:What is AWS CodeArtifact?](https://docs.aws.amazon.com/codeartifact/latest/ug/welcome.html)\n- [Blog:Code Artifact](https://aws.amazon.com/blogs/devops/category/developer-tools/aws-code-artifact/)\n",
                "name": "Configuring code, image, and artifact repositories"
              },
              {
                "content": "### CI/CD\n- [Blog:Complete CI/CD with AWS CodeCommit, AWS CodeBuild, AWS CodeDeploy, and AWS CodePipeline](https://aws.amazon.com/blogs/devops/complete-ci-cd-with-aws-codecommit-aws-codebuild-aws-codedeploy-and-aws-codepipeline/)\n### CodePipeline\n- [DevOps pipeline example](https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts-devops-example.html)\n",
                "name": "Using version control to integrate pipelines with application environments"
              },
              {
                "content": "### CodeBuild\n- [Workshop:CI/CD Pipeline/AWS CodeBuild](https://catalog.us-east-1.prod.workshops.aws/workshops/fff8e490-f397-43d2-ae26-737a6dc4ac68/en-US/50-build-ci-cd-pipeline/52-set-up-codebuild)\n- [CodeBuild CheatSheet](https://tutorialsdojo.com/aws-codebuild/)\n",
                "name": "Setting up build processes (for example AWS CodeBuild)"
              },
              {
                "content": "### Building well-architected serverless applications\n- [Implementing application workload security – part 1](https://aws.amazon.com/fr/blogs/compute/building-well-architected-serverless-applications-implementing-application-workload-security-part-1/)\n- [Implementing application workload security – part 2](https://aws.amazon.com/fr/blogs/compute/building-well-architected-serverless-applications-implementing-application-workload-security-part-2/)\n### Secrets Manager\n- [UserGuide:Intro](https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html)\n### Parameter Store\n- [UserGuide](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-parameter-store.html)\n",
                "name": "Managing build and deployment secrets (for example, AWS Secrets Manager, AWS Systems Manager, Parameter Store)"
              }
            ]
          },
          {
            "id": "1.2",
            "knowledgeOf": [
              {
                "content": "### Test types\n- [Unit Test](https://saturncloud.io/blog/unit-test-integration-test-regression-test-acceptance-test/#what-is-a-unit-test)\n- [Integration Test](https://saturncloud.io/blog/unit-test-integration-test-regression-test-acceptance-test/#what-is-an-integration-test)\n- [Acceptance Test](https://saturncloud.io/blog/unit-test-integration-test-regression-test-acceptance-test/#what-is-an-acceptance-test)\n- [User Interface Test](https://en.wikipedia.org/wiki/Graphical_user_interface_testing)\n### Image scanning\n- [Vulnerability scanning and penetration testing](https://docs.aws.amazon.com/whitepapers/latest/architecting-hipaa-security-and-compliance-on-amazon-eks/vulnerability-scanning-and-penetration-testing.html)\n- [ECR Image Scanning](https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning-basic.html)\n- [Inspector](https://docs.aws.amazon.com/inspector/latest/user/scanning-ecr.html)\n",
                "name": "Different types of tests (for example, unit tests, integration tests, acceptance tests, user interface tests, security scans)"
              },
              {
                "content": "### CodeBuild\n- [Add test](https://docs.aws.amazon.com/codebuild/latest/userguide/how-to-create-pipeline.html#how-to-create-pipeline-add-test)\n- [Workshop](https://catalog.workshops.aws/cicdonaws/en-US/lab03/2-build-and-test)\n- [Api Testing with Postman](https://aws.amazon.com/fr/blogs/devops/automating-your-api-testing-with-aws-codebuild-aws-codepipeline-and-postman/)\n",
                "name": "Reasonable use of different types of tests at different stages of the CI/CD pipeline"
              }
            ],
            "name": "Integrate automated testing into CI/CD pipelines",
            "skillsIn": [
              {
                "content": "### Pull Request in CodeCommit\n- [Validating AWS CodeCommit Pull Requests with AWS CodeBuild and AWS Lambda](https://aws.amazon.com/fr/blogs/devops/validating-aws-codecommit-pull-requests-with-aws-codebuild-and-aws-lambda/)\n- [Creating a AWS CodeCommit Pull Request Workflow with Terraform](https://medium.com/@kpiroddi/creating-a-aws-codecommit-pull-request-workflow-with-terraform-2e57138cef95)\n### GitHub BitBucket\n- [Tracking the AWS CodePipeline build status from the third-party Git repository](https://aws.amazon.com/fr/blogs/devops/aws-codepipeline-build-status-in-a-third-party-git-repository/)\n- [CodeBuild:GitHub webhook events](https://docs.aws.amazon.com/codebuild/latest/userguide/github-webhook.html)\n",
                "name": "Running builds or tests when generating pull requests or code merges (for example, AWS CodeCommit, CodeBuild)"
              },
              {
                "content": "### Distributed Load Testing on AWS\n- [Automate the testing of your software applications at scale](https://docs.aws.amazon.com/solutions/latest/distributed-load-testing-on-aws/solution-overview.html)\n",
                "name": "Running load/stress tests, performance benchmarking, and application testing at scale"
              },
              {
                "content": "Linux and Unix exit code tutorial with examples [link](https://shapeshed.com/unix-exit-codes/)\n",
                "name": "Measuring application health based on application exit codes"
              },
              {
                "content": "### CodeBuild\n- [Create a test report](https://docs.aws.amazon.com/codebuild/latest/userguide/report-create.html)\n- [Code coverage reports](https://docs.aws.amazon.com/codebuild/latest/userguide/code-coverage-report.html)\n- [Blog: AWS CodeCatalyst](https://aws.amazon.com/blogs/devops/maintaining-code-quality-with-amazon-codecatalyst-reports/)\n",
                "name": "Automating unit tests and code coverage"
              },
              {
                "content": "### CodePipeline\n- [Action structure reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html)\n- [CodePipeline pipeline structure reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html)\n- [Adding Lambda actions](https://docs.aws.amazon.com/whitepapers/latest/practicing-continuous-integration-continuous-delivery/building-the-pipeline.html#adding-lambda-actions)\n",
                "name": "Invoking AWS services in a pipeline for testing"
              }
            ]
          },
          {
            "id": "1.3",
            "knowledgeOf": [
              {
                "content": "### Artifact management\n- [CodeArtifact Release Note](https://aws.amazon.com/fr/blogs/aws/software-package-management-with-aws-codeartifact/)\n- [AWS CodeArtifact vs. Artifactory](https://jfrog.com/blog/aws-codeartifact-vs-artifactory-for-binary-management/)\n",
                "name": "Artifact use cases and secure management"
              },
              {
                "content": "### CodeArtifact\n- [AWS CodeArtifact — the long-awaited feature](https://medium.com/@pawel.piwosz/aws-codeartifact-the-long-awaited-feature-7c3757b274e9)\n- [AWS CodeArtifact should be the place to store AWS code artifacts](https://ben11kehoe.medium.com/aws-codeartifact-should-be-the-place-to-store-aws-code-artifacts-1cb9b8249ccf)\n",
                "name": "Methods to create and generate artifacts"
              },
              {
                "content": "### Principle\n- [Unified Process](https://en.wikipedia.org/wiki/Unified_Process)\n- [Artifact Evolution Over Life Cycle](https://www.geeksforgeeks.org/artifact-evolution-over-life-cycle/)\n",
                "name": "Artifact lifecycle considerations"
              }
            ],
            "name": "Build and manage artifacts.",
            "skillsIn": [
              {
                "content": "### CodeArtifact\n- [Workshop:AWS CodeArtifact](https://catalog.us-east-1.prod.workshops.aws/workshops/752fd04a-f7c3-49a0-a9a0-c9b5ed40061b/en-US/codeartifact)\n### Amazon S3\n- [Pipeline with S3](https://dev.classmethod.jp/articles/aws-codepipeline-cd-pipeline-with-s3/)\n### Amazon Elastic Container Registry [Amazon ECR]\n- [Amazon ECR private repositories](https://docs.aws.amazon.com/AmazonECR/latest/userguide/Repositories.html)\n",
                "name": "Creating and configuring artifact repositories (e.g. CodeArtifact, S3, ECR)"
              },
              {
                "content": "### CodeBuild\n- [Using CodeArtifact with CodeBuild](https://docs.aws.amazon.com/codeartifact/latest/ug/codebuild.html)\n- [AWS::CodeBuild::Project Artifacts](https://docs.aws.amazon.com/fr_fr/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html)\n### AWS Lambda\n- [Deploy Java Lambda functions with .zip or JAR file archives](https://docs.aws.amazon.com/lambda/latest/dg/java-package.html)\n- [Deploy Java Lambda functions with container images](https://docs.aws.amazon.com/lambda/latest/dg/java-image.html)\n- [Working with .zip file archives for Python Lambda functions](https://docs.aws.amazon.com/lambda/latest/dg/python-package.html)\n",
                "name": "Configuring build tools for generating artifacts (for example, CodeBuild, AWS Lambda)"
              },
              {
                "content": "### EC2 Image Builder\n- [Automate OS Image Build Pipelines with EC2 Image Builder](https://aws.amazon.com/blogs/aws/automate-os-image-build-pipelines-with-ec2-image-builder/)\n- [Amazon EC2 Image Builder Samples](https://github.com/aws-samples/amazon-ec2-image-builder-samples)\n- [Creating Packer images using AWS System Manager Automation](https://aws.amazon.com/blogs/mt/creating-packer-images-using-system-manager-automation/)\n",
                "name": "Automating Amazon EC2 instance and container image build processes (for example, EC2 Image Builder)"
              }
            ]
          },
          {
            "id": "1.4",
            "knowledgeOf": [
              {
                "content": "### Practicing Continuous Integration and Continuous Delivery on AWS\n- [Deployment methods](https://docs.aws.amazon.com/whitepapers/latest/practicing-continuous-integration-continuous-delivery/deployment-methods.html)\n\n### __In-Place Deployments__\nUpdates the application version without replacing any infrastructure components. Basically, all the instances are stopped, and then the latest version is installed.\n#### Pros\n- Do not need new infrastructure\n- Minimizes infrastructure costs and management overhead\n#### Cons\n- Application availability is affected\n- Rollback (You need to install again the old version)\n### __Blue/Green Deployments__\nIn this strategy, you have two separate but identical environments (Environment Blue and Green). \n- __[Environment Green]__: running current application version; \n- __[Environment Blue]__: running the new application version.\n#### Pros\n- Application availability is not affected\n- Reduces deployment risk (easy rollback, just need to swap URL)\n- Zero downtime\n#### Cons\n- Deployment time\n- Extra cost\n\nAfter the green environment is ready and tested, production traffic is redirected from blue to green. If any problem is found, you can redirect the traffic to the blue environment again.\n\n### __Canary Deployments__\nThis is a subset of Blue/Green deployment. The only difference is, you redirect just a percentage of the users for the green environment (could be 10% or something), the other users (90%) stays in the blue environment. If the green environment is not operating as expected, you can route the 10% traffic back to the blue environment. The big advantage of this strategy, only a small percentage of the users were impacted.\n#### Pros\n- Application availability is not affected\n- Reduces deployment risk (easy rollback, just need to swap URL)\n- Zero downtime\n- Just a small percentage of the users are impacted if the new environment is not working as expected.\n#### Cons\n- Deployment time\n- Extra cost\n\n### __Linear Deployments__\nThis is a subset of Blue/Green deployment. Just like canary deployment, but with this strategy the traffic is shifted in equal increments with an equal number of minutes between each increment. Something like every 3 minutes 10% of traffic will be shifted from Blue to Green environment until achieving 100%.\n#### Pros\n- Application availability is not affected\n- Reduces deployment risk (easy rollback, just need to swap URL)\n- Zero downtime\n- Just a small percentage of the users are impacted if the new environment is not working as expected.\n#### Cons\n- Deployment time\n- Extra cost\n\n### __All-at-once Deployments__\nThis is another subset of Blue/Green deployment, but all traﬃc is shifted from the original task set to the updated task set all at once, instead of shift the traffic in small steps.\n#### Pros\n- Application availability is not affected\n- Reduces deployment risk (easy rollback, just need to swap URL)\n- Zero downtime\n#### Cons\n- Deployment time (Within the Blue/Green deployments this is the faster one)\n- Extra cost\n\n### Deployment on Services\n- [CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations.html)\n- [AutoScaling Group](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html#cfn-attributes-updatepolicy-replacingupdate)\n- Amazon EC2\n- Amazon Elastic Container Service [Amazon ECS]\n- [Amazon Elastic Kubernetes Service [Amazon EKS]](https://awstip.com/best-deployment-strategies-on-aws-eks-roll-out-like-a-pro-bd2d9deadc01)\n- [Amazon Lambda](https://lumigo.io/aws-lambda-deployment/canary-deployment-for-aws-lambda/)\n",
                "name": "Deployment methodologies for various platforms (e.g. EC2, ECS, EKS, Lambda)"
              },
              {
                "content": "### EFS\n- [[UserGuide] What is Amazon Elastic File System?](https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html)\n- [FAQ](https://aws.amazon.com/efs/faq/?nc1=h_ls)\n- [Amazon Elastic File System [Amazon EFS] Cheat Sheet](https://tutorialsdojo.com/amazon-efs/)\n### EBS\n- [UserGuide](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html)\n- [FAQ](https://aws.amazon.com/ebs/faqs/?nc1=h_ls)\n- [Amazon Elastic Block Store [Amazon EBS] Cheat Sheet](https://tutorialsdojo.com/amazon-ebs/)\n### S3\n- [[UserGuide] What is Amazon S3?](https://docs.aws.amazon.com/AmazonS3/latest/userguide/Welcome.html)\n- [FAQ](https://aws.amazon.com/s3/faqs/?nc1=h_ls)\n- [Amazon S3 Cheat Sheet](https://tutorialsdojo.com/amazon-s3/)\n",
                "name": "Application storage patterns (e.g. EFS, S3, EBS)"
              },
              {
                "content": "### Deployment patterns\n- [Blog: Mutable vs. Immutable Infrastructure](https://blog.isweluiz.com.br/2022/10/mutable-vs-immutable-infrastructure.html)\n- [EB UserGuide: Immutable environment updates](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environmentmgmt-updates-immutable.html)\n",
                "name": "Mutable deployment patterns in contrast to immutable deployment patterns"
              },
              {
                "content": "### AWS Developer tools\n- [AWS Cheat Sheets:AWS Developer Tools Overview](https://digitalcloud.training/aws-developer-tools/)\n- [EC2 Image Builder FAQs](https://aws.amazon.com/image-builder/faqs/?nc1=h_ls)\n",
                "name": "Tools and services available for distributing code (for example, CodeDeploy, EC2 Image Builder)"
              }
            ],
            "name": "Implement deployment strategies for instance, container, and serverless environments.",
            "skillsIn": [
              {
                "content": "### CodeArtifact\n- [CodeArtifact UserGuide:How AWS CodeArtifact works with IAM](https://docs.aws.amazon.com/codeartifact/latest/ug/security_iam_service-with-iam.html)\n- [CodeArtifact UserGuide:Repository policies](https://docs.aws.amazon.com/codeartifact/latest/ug/repo-policies.html#granting-read-access-to-specific-principals)\n- [Article:Secure AWS CodeArtifact access for isolated Amazon SageMaker notebook instances](https://dataintegration.info/secure-aws-codeartifact-access-for-isolated-amazon-sagemaker-notebook-instances)\n",
                "name": "Configuring security permissions to allow access to artifact repositories (e.g. IAM, CodeArtifact)"
              },
              {
                "content": "### CodeDeploy Agent\n- [CodeDeploy UserGuide:Working with the CodeDeploy agent](https://docs.aws.amazon.com/codedeploy/latest/userguide/codedeploy-agent.html)\n- [How can I use launch templates to automatically install the CodeDeploy agent on an Amazon EC2 instance running Amazon Linux or Ubuntu?](https://repost.aws/knowledge-center/codedeploy-agent-launch-template)\n",
                "name": "Configuring deployment agents (for example, CodeDeploy agent)"
              },
              {
                "content": "### CodeDeploy\n- [CodeDeploy UserGuide:Troubleshooting CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/troubleshooting.html)\n",
                "name": "Troubleshooting deployment issues"
              },
              {
                "content": "### Docs\n- [Article:Deployment Strategies for Lambda in SAM](https://osamaoracle.com/2021/11/13/deployment-strategies/)\n- [Medium:AWS Deployment Strategies](https://jafreitas90.medium.com/aws-deployment-strategies-ebc910420bf2)\n- [AWS WhitePaper:Overview of Deployment Options on AWS](https://d1.awsstatic.com/whitepapers/overview-of-deployment-options-on-aws.pdf)\n",
                "name": "Using different deployment methods (for example, blue/green, canary)"
              }
            ]
          }
        ]
      },
      {
        "id": "2",
        "name": "Configuration Management and IaC (17%)",
        "taskStatements": [
          {
            "id": "2.1",
            "knowledgeOf": [
              {
                "content": "### CloudFormation\n- [[CloudFormation UserGuide] What is AWS CloudFormation?](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/Welcome.html)\n### Cdk\n- [[CDK User Guide] What is the AWS CDK?](https://docs.aws.amazon.com/cdk/v2/guide/home.html)\n### SAM\n- [[SAM Devi Guide] What is the AWS Serverless Application Model (AWS SAM)?](https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html)\n",
                "name": "Infrastructure as code (IaC) options and tools for AWS"
              },
              {
                "content": "### AWS WhitePaper\n- [[WhitePaper] Change Management in the Cloud](https://docs.aws.amazon.com/whitepapers/latest/change-management-in-the-cloud/change-management-in-the-cloud.html)\n",
                "name": "Change management processes for IaC-based platforms"
              },
              {
                "content": "### AWS WhitePaper\n- [[WhitePaper] Configuration management](https://docs.aws.amazon.com/whitepapers/latest/aws-caf-operations-perspective/configuration-management.html)\n",
                "name": "Configurations management services and strategies"
              }
            ],
            "name": "Define cloud infrastructure and reusable components to provision and manage systems throughout their lifecycle",
            "skillsIn": [
              {
                "content": "### AWS Serverless Application Model [AWS SAM]\n- [[UserGuide] AWS SAM template anatomy](https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy.html)\n### AWS CloudFormation\n- [[UserGuide] Working with AWS CloudFormation templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-guide.html)\n### AWS Cloud Development Kit [AWS CDK]\n- [[Developer Guide] Core Concepts](https://docs.aws.amazon.com/cdk/v2/guide/core_concepts.html)\n",
                "name": "Composing and deploying IaC templates (e.g. SAM, CloudFormation, CDK)"
              },
              {
                "content": "### AWS Cloudformation\n- [[UserGuide] Working with AWS CloudFormation StackSets](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/what-is-cfnstacksets.html)\n- [[UserGuide] Prerequisites for stack set operations](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html)\n",
                "name": "Applying AWS CloudFormation StackSets across multiple accounts and AWS Regions"
              },
              {
                "content": "### OpsWorks Stacks Vs AWS Systems Manager\n- [[Blog] Migrate your AWS OpsWorks Stacks to AWS Systems Manager](https://aws.amazon.com/fr/blogs/mt/migrate-your-aws-opsworks-stacks-to-aws-systems-manager/)\n### AWS AppConfig\n- [What Is AWS AppConfig?](https://docs.aws.amazon.com/appconfig/latest/userguide/what-is-appconfig.html)\n### AWS Config\n- [What Is AWS Config?](https://docs.aws.amazon.com/config/latest/developerguide/WhatIsConfig.html)\n",
                "name": "Determining optimal configuration management services (e.g. AWS OpsWorks, AWS Systems Manager, AWS Config, AWS AppConfig)"
              },
              {
                "content": "### Documentation\n- [How to reuse patterns when developing infrastructure as code](https://d1.awsstatic.com/events/Summits/reinvent2022/DOP302_How-to-reuse-patterns-when-developing-infrastructure-as-code.pdf)\n- [Blog:Cloud governance and compliance on AWS with policy as code](https://aws.amazon.com/fr/blogs/opensource/cloud-governance-and-compliance-on-aws-with-policy-as-code/)\n- [Identity, Security, and Compliance AWS services to help govern your AWS environment](https://docs.aws.amazon.com/whitepapers/latest/establishing-your-cloud-foundation-on-aws/security-assurance-aws.html#identity-security-compliance-services)\n### Service Catalog\n- [What Is Service Catalog?](https://docs.aws.amazon.com/servicecatalog/latest/adminguide/introduction.html)\n### AWS CloudFormation\n- [[Blog] Introducing AWS CloudFormation modules](https://aws.amazon.com/fr/blogs/mt/introducing-aws-cloudformation-modules/)\n- [Developing hooks](https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/hooks.html#hooks-characteristics)\n- [Open Policy Agent CloudFormation Hooks](https://www.openpolicyagent.org/docs/latest/aws-cloudformation-hooks/)\n### CDK\n- [CDK Patterns](https://cdkpatterns.com/patterns/all/)\n",
                "name": "Implementing infrastructure patterns, governance controls, and security standards into reusable IaC templates (e.g. AWS Service Catalog, CloudFormation modules, AWS CDK)"
              }
            ]
          },
          {
            "id": "2.2",
            "knowledgeOf": [
              {
                "content": "### Reference Guide\n- [Welcome to the AWS Account Management Reference Guide](https://docs.aws.amazon.com/accounts/latest/reference/accounts-welcome.html)\n- [Do I need multiple AWS accounts?](https://docs.aws.amazon.com/accounts/latest/reference/welcome-multiple-accounts.html)\n### WhitePaper\n- [Organizing Your AWS Environment Using Multiple Accounts](https://docs.aws.amazon.com/whitepapers/latest/organizing-your-aws-environment/organizing-your-aws-environment.html)\n- [Benefits of using multiple AWS accounts](https://docs.aws.amazon.com/whitepapers/latest/organizing-your-aws-environment/benefits-of-using-multiple-aws-accounts.html)\n- [Establishing Your Cloud Foundation on AWS](https://docs.aws.amazon.com/whitepapers/latest/establishing-your-cloud-foundation-on-aws/welcome.html)\n### AWS Organizations\n- [Best practices for multi-account management](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_best-practices.html)\n",
                "name": "AWS account structures, best practices, and related AWS services"
              }
            ],
            "name": "Deploy automation to create, onboard, and secure AWS accounts in a multi-account/multi-Region environment.",
            "skillsIn": [
              {
                "content": "### WhitePaper\n- [Design principles for your multi-account strategy](https://docs.aws.amazon.com/whitepapers/latest/organizing-your-aws-environment/design-principles-for-your-multi-account-strategy.html#organize-based-on-security-and-operational-needs)\n### AWS Control Tower\n- [AWS Control Tower Features](https://aws.amazon.com/fr/controltower/features/#:~:text=A%20landing%20zone%20is%20a,federated%20access%2C%20and%20account%20structure.)\n",
                "name": "Standardizing and automating account provisioning and configuration"
              },
              {
                "content": "### AWS Organizations\n- [What is AWS Organizations?](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_introduction.html)\n### AWS Control Tower\n- [What Is AWS Control Tower?](https://docs.aws.amazon.com/controltower/latest/userguide/what-is-control-tower.html)\n- [WorkShop](https://controltower.aws-management.tools/core/overview/)\n### Github\n- [Deploy and manage AWS Control Tower controls by using Terraform](https://github.com/aws-samples/aws-control-tower-controls-terraform)\n",
                "name": "Creating, consolidating, and centrally managing accounts (for example, AWS Organizations, AWS Control Tower)"
              },
              {
                "content": "### WhitePaper\n- [Identity Management \u0026 Access Control capability](https://docs.aws.amazon.com/whitepapers/latest/establishing-your-cloud-foundation-on-aws/identity-management-access-control-capability.html)\n- [Service control policies (SCPs)](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html)\n### AWS Organizations\n- [Accessing member accounts in your organization](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html)\n- [Granting a user permissions to switch roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_permissions-to-switch.html)\n- [Creating a role to delegate permissions to an IAM user](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user.html)\n",
                "name": "Applying IAM solutions for multi-account and complex organization structures (for example, SCPs, assuming roles)"
              },
              {
                "content": "### AWS Config\n- [Multi-Account Multi-Region Data Aggregation](https://docs.aws.amazon.com/config/latest/developerguide/aggregate-data.html)\n### AWS Control Tower\n- [AWS multi-account strategy for your AWS Control Tower landing zone](https://docs.aws.amazon.com/controltower/latest/userguide/aws-multi-account-landing-zone.html)\n### AWS Security Hub\n- [What is AWS Security Hub?](https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html)\n### Amazon Detective\n- [Amazon Detective](https://docs.aws.amazon.com/detective/latest/adminguide/what-is-detective.html)\n### Amazon GuardDuty\n- [What is Amazon GuardDuty?](https://docs.aws.amazon.com/guardduty/latest/ug/what-is-guardduty.html)\n### Service Catalog\n- [Compliance Validation for Service Catalog](https://docs.aws.amazon.com/servicecatalog/latest/adminguide/service-catalog-compliance.html)\n- [Security Best Practices for AWS Service Catalog](https://docs.aws.amazon.com/servicecatalog/latest/adminguide/security-best-practices.html)\n## SCPs\n- [What is AWS SCP (Service Control Policy) and How does it Help with Permissions?](https://www.stormit.cloud/blog/aws-scp-service-control-policy/)\n",
                "name": "Implementing and developing governance and security controls at scale (AWS Config, AWS Control Tower, AWS Security Hub, Amazon Detective, Amazon GuardDuty, AWS Service Catalog, SCPs)"
              }
            ]
          },
          {
            "id": "2.3",
            "knowledgeOf": [
              {
                "content": "### Step Functions\n- [What is AWS Step Functions?](https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html)\n### Batch\n- [What Is AWS Batch?](https://docs.aws.amazon.com/batch/latest/userguide/what-is-batch.html)\n",
                "name": "AWS services and solutions to automate tasks and processes"
              },
              {
                "content": "### Documentation\n- [LinkedIn:The methods to interact with AWS and information about regions and availability zones with edge locations](https://www.linkedin.com/pulse/methods-interact-aws-information-regions-availability-jayannavar#:~:text=Methods%20of%20Interacting%20with%20AWS%3A%20We%20can%20interact%20with%20AWS,to%20interact%20with%20AWS%20services.)\n### AWS CLI\n- [AWS Cli](https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-welcome.html)\n### Protect Root Account\n- [Best practices to protect your account's root user](https://docs.aws.amazon.com/accounts/latest/reference/best-practices-root-user.html)\n- [Identity and Access Management for AWS Account Management](https://docs.aws.amazon.com/accounts/latest/reference/security-iam.html)\n",
                "name": "Methods and strategies to interact with the AWS software-defined infrastructure"
              }
            ],
            "name": "Design and build automated solutions for complex tasks and large-scale environments.",
            "skillsIn": [
              {
                "content": "### Sytems Manager\n- [AWS Systems Manager Inventory](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-inventory.html)\n- [AWS Systems Manager Patch Manager](https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager.html)\n- [Evaluating Resources with AWS Config Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html)\n",
                "name": "Automating system inventory, configuration, and patch management (for example, Systems Manager, AWS Config)"
              },
              {
                "content": "### SDKs\n- [Lambda examples using SDK for Python (Boto3)](https://docs.aws.amazon.com/code-library/latest/ug/python_3_lambda_code_examples.html)\n### Step function with lambda\n- [Creating a Step Functions state machine that uses Lambda](https://docs.aws.amazon.com/step-functions/latest/dg/tutorial-creating-lambda-state-machine.html)\n",
                "name": "Developing Lambda function automations for complex scenarios (for example, AWS SDKs, Lambda, AWS Step Functions)"
              },
              {
                "content": "### AWS OpsWorks \n- [AWS OpsWorks Stacks](https://docs.aws.amazon.com/opsworks/latest/userguide/welcome_classic.html) EOL May 26 2024\n- [AWS Systems Manager State Manager](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-state.html)\n",
                "name": "Automating the configuration of software applications to the desired state (for example, OpsWorks, Systems Manager State Manager)"
              },
              {
                "content": "### AWS Systems Manager Compliance\n- [AWS Systems Manager Compliance](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-compliance.html)\n",
                "name": "Maintaining software compliance (for example, Systems Manager)"
              }
            ]
          }
        ]
      },
      {
        "content": "### AWS Well-Architected Framework\n- [Reliability Pillar:Reliability](https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/reliability.html)        \n",
        "id": "3",
        "name": "Resilient Cloud Solutions (15%)",
        "taskStatements": [
          {
            "id": "3.1",
            "knowledgeOf": [
              {
                "content": "### Multi-AZ Services\n#### Load Balancer\n- [ALB:Availability Zones for your Application Load Balancer](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-subnets.html)\n- [ALB:Cross-zone load balancing for target groups](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/disable-cross-zone.html)\n#### Auto Scaling Group\n- [ASG:Amazon EC2 Auto Scaling benefits](https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-benefits.html)\n#### RDS\n- [RDS:Configuring and managing a Multi-AZ deployment](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.MultiAZ.html)\n- [https://aws.amazon.com/rds/features/multi-az/](https://aws.amazon.com/rds/features/multi-az/)\n### Blog: Building highly resilient applications using Amazon Route 53 Application Recovery Controller\n- [Part 1: Single-Region stack](https://aws.amazon.com/blogs/networking-and-content-delivery/building-highly-resilient-applications-using-amazon-route-53-application-recovery-controller-part-1-single-region-stack/)\n- [Part 2: Multi-Region stack](https://aws.amazon.com/blogs/networking-and-content-delivery/building-highly-resilient-applications-using-amazon-route-53-application-recovery-controller-part-2-multi-region-stack/)\n### Route53\n- [Route53:Adding another Region to your latency-based routing in Amazon Route 53](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/TutorialAddingLBRRegion.html)\n",
                "name": "Multi-AZ and multi-Region deployments (for example, compute layer, data layer)"
              },
              {
                "content": "### AWS Services\n- [AWS Service Level Agreement – What you need to know](https://www.logicata.com/blog/aws-service-level-agreement/)\n",
                "name": "SLAs"
              },
              {
                "content": "### DynamoDB\n- [Global tables - multi-Region replication for DynamoDB](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GlobalTables.html)\n### RDS\n-  [Multi-AZ DB instance deployments](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.MultiAZSingleStandby.html)\n### Aurora\n- [High availability for Amazon Aurora](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.AuroraHighAvailability.html)\n### S3\n- [Replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/replication.html)\n",
                "name": "Replication and failover methods for stateful services"
              },
              {
                "content": "### Blog\n- [AWS:Architecture I: How to Get High Availability](https://aws.amazon.com/fr/blogs/startups/how-to-get-high-availability-in-architecture/)\n- [Netapp Blog: AWS High Availability: Compute, SQL and Storage](https://bluexp.netapp.com/blog/understanding-aws-high-availability-compute-sql-and-storage)\n- [cbtnuggets Blog: AWS Architecture: High Availability vs Fault Tolerance](https://www.cbtnuggets.com/blog/certifications/cloud/aws-architecture-high-availability-vs-fault-tolerance)\n### Presentation\n- [High-Availability in the Cloud Architectural Best Practices](https://s3.amazonaws.com/aws001/guided_trek/GuidedTrek_RightScale_High%20Availability%20in%20the%20Cloud_SanFran.pdf)\n",
                "name": "Techniques to achieve high availability (for example, Multi-AZ, multi-Region)"
              }
            ],
            "name": "Implement highly available solutions to meet resilience and business requirements.",
            "skillsIn": [
              {
                "content": "### Blog\n- [What Is IT Resilience? – Strategy and Planning for Technology Resiliency](https://www.parkplacetechnologies.com/blog/what-is-it-resilience-strategy-and-planning-for-technology-resiliency/)\n### AWS Well-Architected Framework\n- [Resiliency Requirement Planning](https://docs.aws.amazon.com/wellarchitected/latest/financial-services-industry-lens/resiliency-requirement-planning.html)\n",
                "name": "Translating business requirements into technical resiliency needs"
              },
              {
                "content": "### Book\n- [Amazon Web Services in Action: Chapter 13. Designing for fault-tolerance](https://livebook.manning.com/book/amazon-web-services-in-action/chapter-13/)\n### WhitePaper\n- [Real-Time Communication on AWS: High availability and scalability on AWS](https://docs.aws.amazon.com/whitepapers/latest/real-time-communication-on-aws/high-availability-and-scalability-on-aws.html)\n",
                "name": "Identifying and remediating single points of failure in existing workloads"
              },
              {
                "content": "### Amazon DynamoDB\n- [Blog: New – Convert Your Single-Region Amazon DynamoDB Tables to Global Tables](https://aws.amazon.com/fr/blogs/aws/new-convert-your-single-region-amazon-dynamodb-tables-to-global-tables/)\n### Amazon RDS\n- [Cross-Region read replicas](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RDS_Fea_Regions_DB-eng.Feature.CrossRegionReadReplicas.html)\n- [Cross-Region automated backups](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RDS_Fea_Regions_DB-eng.Feature.CrossRegionAutomatedBackups.html)\n- [Using Amazon Aurora global databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html)\n### Amazon Route 53\n- [Blog: Using Route 53 Private Hosted Zones for Cross-account Multi-region Architectures](https://aws.amazon.com/fr/blogs/architecture/using-route-53-private-hosted-zones-for-cross-account-multi-region-architectures/)\n- [Workshop: Module 5: Multi-Region Resiliency with Route 53 ARC](https://www.wellarchitectedlabs.com/reliability/disaster-recovery/workshop_5/)\n- [Workshop: Route 53 - Failover in Private DNS](https://disaster-recovery.workshop.aws/en/labs/basics/route53.html)\n### Amazon S3\n- [S3 Bi-Directional Replication](https://wellarchitectedlabs.com/reliability/200_labs/200_bidirectional_replication_for_s3/)\n### Amazon CloudFront\n- [Blog: Using Amazon CloudFront and Amazon S3 to build multi-Region active-active geo proximity applications](https://aws.amazon.com/fr/blogs/networking-and-content-delivery/using-amazon-cloudfront-and-amazon-s3-to-build-multi-region-active-active-geo-proximity-applications/)\n- [DR Workshop: CloudFront - Origin Group](https://disaster-recovery.workshop.aws/en/labs/basics/cloudfront.html)\n",
                "name": "Enabling cross-Region solutions where available (for example, Amazon DynamoDB, Amazon RDS, Amazon Route 53, Amazon S3, Amazon CloudFront)"
              },
              {
                "content": "### Classic Load Balancer\n- [Configure cross-zone load balancing for your **Classic Load Balancer**](https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html)\n### Application Load Balancer\n- [How Elastic Load Balancing works | Cross-zone load balancing](https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/how-elastic-load-balancing-works.html#cross-zone-load-balancing)\n",
                "name": "Configuring load balancing to support cross-AZ services"
              },
              {
                "content": "### Route 53\n- [Guidance for Cross Region Failover and Graceful Failback on AWS](https://d1.awsstatic.com/solutions/guidance/architecture-diagrams/cross-region-failover-and-graceful-failback-on-aws.pdf)\n- [DR Workshop: API Gateway - Failover for Private APIs](https://disaster-recovery.workshop.aws/en/labs/advanced/api-gateway.html)\n",
                "name": "Configuring applications and related services to support multiple Availability Zones and Regions while minimizing downtime"
              }
            ]
          },
          {
            "id": "3.2",
            "knowledgeOf": [
              {
                "content": "### Auto Scaling\n- [Amazon CloudWatch metrics for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-metrics.html)\n- [Advanced predictive scaling policy configurations using custom metrics](https://docs.aws.amazon.com/autoscaling/ec2/userguide/predictive-scaling-customized-metric-specification.html)\n",
                "name": "Appropriate metrics for scaling services"
              },
              {
                "content": "### Loosely Coupled\n#### AWS Well-Architected Framework\n- [High Performance Computing Lens: Loosely Coupled Scenarios](https://docs.aws.amazon.com/wellarchitected/latest/high-performance-computing-lens/loosely-coupled-scenarios.html)\n- [Queue-Based Architecture](https://docs.aws.amazon.com/wellarchitected/latest/high-performance-computing-lens/queue-based-architecture.html)\n- [REL04-BP02 Implement loosely coupled dependencies](https://docs.aws.amazon.com/wellarchitected/latest/framework/rel_prevent_interaction_failure_loosely_coupled_system.html)\n### Distributed architectures\n- [Challenges with distributed systems](https://aws.amazon.com/builders-library/challenges-with-distributed-systems/?nc1=h_ls)\n- [Distributed systems components](https://docs.aws.amazon.com/whitepapers/latest/microservices-on-aws/distributed-systems-components.html)\n",
                "name": "Loosely coupled and distributed architectures"
              },
              {
                "content": "### AWS Well-Architected Framework\n- [Serverless Applications Lens: Scenarios](https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/restful-microservices.html)\n- [High Performance Computing Lens: Serverless](https://docs.aws.amazon.com/wellarchitected/latest/high-performance-computing-lens/serverless.html)\n",
                "name": "Serverless architectures"
              },
              {
                "content": "### Comparison\n- [What Are the Differences Between Elastic Beanstalk, EKS, ECS, EC2, Lambda, and Fargate?](https://www.logicmonitor.com/blog/what-are-the-differences-between-elastic-beanstalk-eks-ecs-ec2-lambda-and-fargate)\n- [What is Amazon EKS?](https://docs.aws.amazon.com/eks/latest/userguide/what-is-eks.html)\n- [What is Amazon Elastic Container Service?](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/Welcome.html)\n- [What is AWS Lambda?](https://docs.aws.amazon.com/lambda/latest/dg/welcome.html)\n- [What is AWS Elastic Beanstalk?](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/Welcome.html)\n",
                "name": "Container platforms"
              }
            ],
            "name": "Implement solutions that are scalable to meet business requirements.",
            "skillsIn": [
              {
                "content": "### TroubleShooting\n- [ASG_UserGuide: Troubleshoot Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/codedeploy/latest/userguide/troubleshooting-auto-scaling.html)\n- [CodeDeploy_UserGuide: Troubleshoot Amazon EC2 Auto Scaling issues](https://docs.aws.amazon.com/codedeploy/latest/userguide/troubleshooting-auto-scaling.html)\n- [Blog: How do I troubleshoot scaling issues with my Amazon EC2 Auto Scaling group?](https://repost.aws/knowledge-center/auto-scaling-troubleshooting)\n### Auto Scaling actions\n- [ASG_UserGuide: Control which Auto Scaling instances terminate during scale in](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html)\n- [ASG_UserGuide: Temporarily remove instances from your Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html)\n- [ASG_UserGuide: Suspend and resume a process for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html)\n",
                "name": "Identifying and remediating scaling issues"
              },
              {
                "content": "### Auto Scaling\n- [Amazon EC2 Auto Scaling lifecycle hooks](https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html)\n- [Worshop: Ec2 Spot Instances](https://ec2spotworkshops.com/)\n",
                "name": "Identifying and implementing appropriate auto scaling, load balancing, and caching solutions"
              },
              {
                "content": "### Workshop\n- [Amazon ECS Workshop](https://ecsworkshop.com/)\n- [AWS Elastic Kubernetes Service (EKS) workshop](https://www.eksworkshop.com/docs/introduction/)\n",
                "name": "Deploying container-based applications (for example, Amazon ECS, Amazon EKS)"
              },
              {
                "content": "### Articles\n- [Blog: Creating a Multi-Region Application with AWS Services – Part 1, Compute, Networking, and Security](https://aws.amazon.com/blogs/architecture/creating-a-multi-region-application-with-aws-services-part-1-compute-and-security/)\n- [Medium: How to Design a Highly Available, Scalable \u0026 Secured AWS 3-tier Application for Multi-region?](https://medium.com/@azizulmaqsud/how-to-design-a-highly-available-scalable-secured-aws-3-tier-application-for-multi-region-%EF%B8%8F-b1e2032ea22c)\n",
                "name": "Deploying workloads in multiple AWS Regions for global scalability"
              },
              {
                "content": "- [Build a CRUD Serverless API from scratch using AWS Lambda (Python), API Gateway, and DynamoDB](https://dev.to/aws-builders/build-a-crud-serverless-api-from-scratch-using-aws-lambda-api-gateway-and-dynamodb-1ia4)\n- [Field Notes: Serverless Container-based APIs with Amazon ECS and Amazon API Gateway](https://aws.amazon.com/blogs/architecture/field-notes-serverless-container-based-apis-with-amazon-ecs-and-amazon-api-gateway/)\n- [EDA using Amazon EventBridge, Lambda, and Fargate ECS, with SAM-CLI and a Native Spring Boot MS as Event Source](https://aosolorzano.medium.com/eda-with-eventbridge-and-lambda-using-sam-cli-with-spring-boot-ms-on-fargate-ecs-as-event-source-9abee237be08)\n",
                "name": "Configuring serverless applications (for example, Amazon API Gateway, Lambda, AWS Fargate)"
              }
            ]
          },
          {
            "id": "3.3",
            "knowledgeOf": [
              {
                "content": "### AWS Well-Architected Framework\n- [Reliability Pillar:Plan for Disaster Recovery (DR)](https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/plan-for-disaster-recovery-dr.html)\n### Definition of objectives\n- [__Recovery Time Objective (RTO)__](https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/disaster-recovery-dr-objectives.html)\n  - Defined by the organization. RTO is the maximum acceptable delay between the interruption of service and restoration of service. This determines what is considered an acceptable time window when service is unavailable.\n- [__Recovery Point Objective (RPO)__](https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/disaster-recovery-dr-objectives.html)\n  - Defined by the organization. RPO is the maximum acceptable amount of time since the last data recovery point. This determines what is considered an acceptable loss of data between the last recovery point and the interruption of service.\n- [__Availability__](https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/availability.html)\n  - is the percentage of time that a workload is available for use. \n- [__Resiliency__](https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/resiliency-and-the-components-of-reliability.html)\n  -  is the ability of a workload to recover from infrastructure or service disruptions, dynamically acquire computing resources to meet demand, and mitigate disruptions, such as misconfigurations or transient network issues.\n",
                "name": "Disaster recovery concepts (for example, RTO, RPO)"
              },
              {
                "content": "### Principles\n- [AWS Well-Architected Framework: Disaster recovery options in the cloud](https://docs.aws.amazon.com/whitepapers/latest/disaster-recovery-workloads-on-aws/disaster-recovery-options-in-the-cloud.html)\n### AWS Architecture Blog\n- [Blog: Disaster Recovery (DR) Architecture on AWS, Part I: Strategies for Recovery in the Cloud](https://aws.amazon.com/blogs/architecture/disaster-recovery-dr-architecture-on-aws-part-i-strategies-for-recovery-in-the-cloud/)\n- [Blog: Disaster Recovery (DR) Architecture on AWS, Part II: Backup and Restore with Rapid Recovery](https://aws.amazon.com/blogs/architecture/disaster-recovery-dr-architecture-on-aws-part-ii-backup-and-restore-with-rapid-recovery/)\n- [Blog: Disaster Recovery (DR) Architecture on AWS, Part III: Pilot Light and Warm Standby](https://aws.amazon.com/blogs/architecture/disaster-recovery-dr-architecture-on-aws-part-iii-pilot-light-and-warm-standby/)\n- [Blog: Disaster Recovery (DR) Architecture on AWS, Part IV: Multi-site Active/Active](https://aws.amazon.com/blogs/architecture/disaster-recovery-dr-architecture-on-aws-part-iv-multi-site-active-active/)\n",
                "name": "Backup and recovery strategies (for example, pilot light, warm standby)"
              },
              {
                "content": "### AWS Well-Architected Framework\n- [Disaster Recovery of Workloads on AWS: Recovery in the Cloud](https://docs.aws.amazon.com/whitepapers/latest/disaster-recovery-workloads-on-aws/disaster-recovery-options-in-the-cloud.html)\n### Disaster Recovery FAQ\n- [What are the best disaster recovery methods?](https://aws.amazon.com/what-is/disaster-recovery/#seo-faq-pairs#what-are-the-best-disaster-recovery-methods)\n### Availability zone evacuation pattern\n- [AWS Whitepapers](https://docs.aws.amazon.com/whitepapers/latest/advanced-multi-az-resilience-patterns/control-plane-controlled-evacuation.html)\n",
                "name": "Recovery procedures"
              }
            ],
            "name": "Implement automated recovery processes to meet RTO/RPO requirements.",
            "skillsIn": [
              {
                "content": "### Amazon RDS\n- Reboot with failover\n  - [AWS Well-Architected Labs: RDS Failure Injection](https://www.wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/5_failure_injection_rds/)\n  - [AWS RDS MySQL on Multi-AZ Test Failover](https://tungle.ca/?p=3677)\n  ```\n  aws rds reboot-db-instance \\\n    --region us-east-1 \\\n    --profile my_aws_profile_name_here \\\n    --db-instance-identifier my_rds_db_identifier_here \\\n    --force-failover\n  ```\n### Amazon Aurora\n- [Testing Amazon Aurora MySQL using fault injection queries](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Managing.FaultInjectionQueries.html)\n- [Doing failover in Amazon Aurora Read Replica with the highest priority](https://dev.to/aws-builders/doing-failover-in-amazon-aurora-read-replica-with-the-highest-priority-4okb)\n- [How can I perform a failover in my Aurora global database, and why did my failover fail?](https://repost.aws/knowledge-center/aurora-postgresql-failover-issues)\n- [DR WorkShop: Fail Over at Aurora Global Database](https://disaster-recovery.workshop.aws/en/labs/advanced/aurora-global-database/failover.html)\n- [Blog: Deploy multi-Region Amazon Aurora applications with a failover blueprint](https://aws.amazon.com/blogs/database/deploy-multi-region-amazon-aurora-applications-with-a-failover-blueprint/)\n\n### Route 53\n- [DNS Failover with Route53](https://medium.com/tysonworks/dns-failover-with-route53-cc3427a3629a)\n- [Amazon Route 53: Health Checks and DNS Failover](https://www.stormit.cloud/blog/route-53-health-check/)\n\n### CloudFront\n- [Optimizing high availability with CloudFront origin failover](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/high_availability_origin_failover.html)\n",
                "name": "Testing failover of Multi-AZ/multi-Region workloads (for example, Amazon RDS, Amazon Aurora, Route 53, CloudFront)"
              },
              {
                "content": "### AWS Backup\n- [AWS Backup: Creating backup copies across AWS Regions](https://docs.aws.amazon.com/aws-backup/latest/devguide/cross-region-backup.html)                \n- [Blog: Secure data recovery with cross-account backup and Cross-Region copy using AWS Backup](https://aws.amazon.com/blogs/storage/secure-data-recovery-with-cross-account-backup-and-cross-region-copy-using-aws-backup/)\n### Amazon S3\n- [S3 Backup Strategy and How configure Cross Region Replication.](https://medium.com/@ajay20kin/s3-backup-strategy-and-how-configure-cross-region-replication-dd5f1e3b8b63)\n- [Workshop](https://www.wellarchitectedlabs.com/reliability/disaster-recovery/workshop_1/2-s3-crr/)\n### Systems Manager\n- [Create an AMI and cross-Region copy](https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-document-backup-maintenance-example.html)\n",
                "name": "Identifying and implementing appropriate cross-Region backup and recovery strategies (for example, AWS Backup, Amazon S3, Systems Manager)"
              },
              {
                "content": "### Application Load Balancer\n- [Health checks for your target groups](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/target-group-health-checks.html)\n- [Cross-zone load balancing for target groups](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/disable-cross-zone.html)\n- [Target group health](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/target-group-health.html)\n### Classic Load Balancer\n- [Configure health checks for your Classic Load Balancer](https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-healthchecks.html)\n",
                "name": "Configuring a load balancer to recover from backend failure"
              }
            ]
          }
        ]
      },
      {
        "id": "4",
        "name": "Monitoring and Logging (15%)",
        "taskStatements": [
          {
            "id": "4.1",
            "knowledgeOf": [
              {
                "content": "How to monitor applications and infrastructure",
                "name": "How to monitor applications and infrastructure"
              },
              {
                "content": "Amazon CloudWatch metrics (for example, namespaces, metrics, dimensions, and resolution)",
                "name": "Amazon CloudWatch metrics (for example, namespaces, metrics, dimensions, and resolution)"
              },
              {
                "content": "Real-time log ingestion",
                "name": "Real-time log ingestion"
              },
              {
                "content": "Encryption options for at-rest and in-transit logs and metrics (for example, client-side and server-side, AWS Key Management Service [AWS KMS])",
                "name": "Encryption options for at-rest and in-transit logs and metrics (for example, client-side and server-side, AWS Key Management Service [AWS KMS])"
              },
              {
                "content": "Security configurations (for example, IAM roles and permissions to allow for log collection)",
                "name": "Security configurations (for example, IAM roles and permissions to allow for log collection)"
              }
            ],
            "name": "Configure the collection, aggregation, and storage of logs and metrics.",
            "skillsIn": [
              {
                "content": "Securely storing and managing logs",
                "name": "Securely storing and managing logs"
              },
              {
                "content": "Creating CloudWatch metrics from log events by using metric filters",
                "name": "Creating CloudWatch metrics from log events by using metric filters"
              },
              {
                "content": "Creating CloudWatch metric streams (for example, Amazon S3 or Amazon Kinesis Data Firehose options)",
                "name": "Creating CloudWatch metric streams (for example, Amazon S3 or Amazon Kinesis Data Firehose options)"
              },
              {
                "content": "Collecting custom metrics (for example, using the CloudWatch agent)",
                "name": "Collecting custom metrics (for example, using the CloudWatch agent)"
              },
              {
                "content": "Managing log storage lifecycles (for example, S3 lifecycles, CloudWatch log group retention)",
                "name": "Managing log storage lifecycles (for example, S3 lifecycles, CloudWatch log group retention)"
              },
              {
                "content": "Processing log data by using CloudWatch log subscriptions (for example, Kinesis, Lambda, Amazon OpenSearch Service)",
                "name": "Processing log data by using CloudWatch log subscriptions (for example, Kinesis, Lambda, Amazon OpenSearch Service)"
              },
              {
                "content": "Searching log data by using filter and pattern syntax or CloudWatch Logs Insights",
                "name": "Searching log data by using filter and pattern syntax or CloudWatch Logs Insights"
              },
              {
                "content": "Configuring encryption of log data (for example, AWS KMS)",
                "name": "Configuring encryption of log data (for example, AWS KMS)"
              }
            ]
          },
          {
            "id": "4.2",
            "knowledgeOf": [
              {
                "content": "Anomaly detection alarms (for example, CloudWatch anomaly detection)",
                "name": "Anomaly detection alarms (for example, CloudWatch anomaly detection)"
              },
              {
                "content": "Common CloudWatch metrics and logs (for example, CPU utilization with Amazon EC2, queue length with Amazon RDS, 5xx errors with an Application Load Balancer)",
                "name": "Common CloudWatch metrics and logs (for example, CPU utilization with Amazon EC2, queue length with Amazon RDS, 5xx errors with an Application Load Balancer)"
              },
              {
                "content": "Amazon Inspector and common assessment templates",
                "name": "Amazon Inspector and common assessment templates"
              },
              {
                "content": "AWS Config rules",
                "name": "AWS Config rules"
              },
              {
                "content": "AWS CloudTrail log events",
                "name": "AWS CloudTrail log events"
              }
            ],
            "name": "Audit, monitor, and analyze logs and metrics to detect issues.",
            "skillsIn": [
              {
                "content": "Building CloudWatch dashboards and Amazon QuickSight visualizations",
                "name": "Building CloudWatch dashboards and Amazon QuickSight visualizations"
              },
              {
                "content": "Associating CloudWatch alarms with CloudWatch metrics (standard and custom)",
                "name": "Associating CloudWatch alarms with CloudWatch metrics (standard and custom)"
              },
              {
                "content": "Configuring AWS X-Ray for different services (for example, containers, API Gateway, Lambda)",
                "name": "Configuring AWS X-Ray for different services (for example, containers, API Gateway, Lambda)"
              },
              {
                "content": "Analyzing real-time log streams (for example, using Kinesis Data Streams)",
                "name": "Analyzing real-time log streams (for example, using Kinesis Data Streams)"
              },
              {
                "content": "Analyzing logs with AWS services (for example, Amazon Athena, CloudWatch Logs Insights)",
                "name": "Analyzing logs with AWS services (for example, Amazon Athena, CloudWatch Logs Insights)"
              }
            ]
          },
          {
            "id": "4.3",
            "knowledgeOf": [
              {
                "content": "Event-driven, asynchronous design patterns (for example, S3 Event Notifications or Amazon EventBridge events to Amazon Simple Notification Service [Amazon SNS] or Lambda)",
                "name": "Event-driven, asynchronous design patterns (for example, S3 Event Notifications or Amazon EventBridge events to Amazon Simple Notification Service [Amazon SNS] or Lambda)"
              },
              {
                "content": "Capabilities of auto scaling a variety of AWS services (for example, EC2 Auto Scaling groups, RDS storage auto scaling, DynamoDB, ECS capacity provider, EKS autoscalers)",
                "name": "Capabilities of auto scaling a variety of AWS services (for example, EC2 Auto Scaling groups, RDS storage auto scaling, DynamoDB, ECS capacity provider, EKS autoscalers)"
              },
              {
                "content": "Alert notification and action capabilities (for example, CloudWatch alarms to Amazon SNS, Lambda, EC2 automatic recovery)",
                "name": "Alert notification and action capabilities (for example, CloudWatch alarms to Amazon SNS, Lambda, EC2 automatic recovery)"
              },
              {
                "content": "Health check capabilities in AWS services (for example, Application Load Balancer target groups, Route 53)",
                "name": "Health check capabilities in AWS services (for example, Application Load Balancer target groups, Route 53)"
              }
            ],
            "name": "Automate monitoring and event management of complex environments.",
            "skillsIn": [
              {
                "content": "Configuring solutions for auto scaling (for example, DynamoDB, EC2 Auto Scaling groups, RDS storage auto scaling, ECS capacity provider)",
                "name": "Configuring solutions for auto scaling (for example, DynamoDB, EC2 Auto Scaling groups, RDS storage auto scaling, ECS capacity provider)"
              },
              {
                "content": "Creating CloudWatch custom metrics and metric filters, alarms, and notifications (for example, Amazon SNS, Lambda)",
                "name": "Creating CloudWatch custom metrics and metric filters, alarms, and notifications (for example, Amazon SNS, Lambda)"
              },
              {
                "content": "Configuring S3 events to process log files (for example, by using Lambda), and deliver log files to another destination (for example, OpenSearch Service, CloudWatch Logs)",
                "name": "Configuring S3 events to process log files (for example, by using Lambda), and deliver log files to another destination (for example, OpenSearch Service, CloudWatch Logs)"
              },
              {
                "content": "Configuring EventBridge to send notifications based on a particular event pattern",
                "name": "Configuring EventBridge to send notifications based on a particular event pattern"
              },
              {
                "content": "Installing and configuring agents on EC2 instances (for example, AWS Systems Manager Agent [SSM Agent], CloudWatch agent)",
                "name": "Installing and configuring agents on EC2 instances (for example, AWS Systems Manager Agent [SSM Agent], CloudWatch agent)"
              },
              {
                "content": "### AWS Config\nhttps://mng.workshop.aws/config.html\n",
                "name": "Configuring AWS Config rules to remediate issues"
              },
              {
                "content": "Configuring health checks (for example, Route 53, Application Load Balancer)",
                "name": "Configuring health checks (for example, Route 53, Application Load Balancer)"
              }
            ]
          }
        ]
      },
      {
        "id": "5",
        "name": "Incident and Event Response (14%)",
        "taskStatements": [
          {
            "id": "5.1",
            "knowledgeOf": [
              {
                "content": "AWS services that generate, capture, and process events (for example, AWS Health, EventBridge, CloudTrail, CloudWatch Events)",
                "name": "AWS services that generate, capture, and process events (for example, AWS Health, EventBridge, CloudTrail, CloudWatch Events)"
              },
              {
                "content": "Event-driven architectures (for example, fan out, event streaming, queuing)",
                "name": "Event-driven architectures (for example, fan out, event streaming, queuing)"
              }
            ],
            "name": "Manage event sources to process, notify, and take action in response to events.",
            "skillsIn": [
              {
                "content": "Integrating AWS event sources (for example, AWS Health, EventBridge, CloudTrail, CloudWatch Events)",
                "name": "Integrating AWS event sources (for example, AWS Health, EventBridge, CloudTrail, CloudWatch Events)"
              },
              {
                "content": "Building event processing workflows (for example, Amazon Simple Queue Service [Amazon SQS], Kinesis, Amazon SNS, Lambda, Step Functions)",
                "name": "Building event processing workflows (for example, Amazon Simple Queue Service [Amazon SQS], Kinesis, Amazon SNS, Lambda, Step Functions)"
              }
            ]
          },
          {
            "id": "5.2",
            "knowledgeOf": [
              {
                "content": "Fleet management services (for example, Systems Manager, AWS Auto Scaling)",
                "name": "Fleet management services (for example, Systems Manager, AWS Auto Scaling)"
              },
              {
                "content": "Configuration management services (for example, AWS Config)",
                "name": "Configuration management services (for example, AWS Config)"
              }
            ],
            "name": "Implement configuration changes in response to events.",
            "skillsIn": [
              {
                "content": "Applying configuration changes to systems",
                "name": "Applying configuration changes to systems"
              },
              {
                "content": "Modifying infrastructure configurations in response to events",
                "name": "Modifying infrastructure configurations in response to events"
              },
              {
                "content": "Remediating a non-desired system state",
                "name": "Remediating a non-desired system state"
              }
            ]
          },
          {
            "id": "5.3",
            "knowledgeOf": [
              {
                "content": "AWS metrics and logging services (for example, CloudWatch, X-Ray)",
                "name": "AWS metrics and logging services (for example, CloudWatch, X-Ray)"
              },
              {
                "content": "AWS service health services (for example, AWS Health, CloudWatch, Systems Manager OpsCenter)",
                "name": "AWS service health services (for example, AWS Health, CloudWatch, Systems Manager OpsCenter)"
              },
              {
                "content": "Root cause analysis",
                "name": "Root cause analysis"
              }
            ],
            "name": "Troubleshoot system and application failures.",
            "skillsIn": [
              {
                "content": "Analyzing failed deployments (for example, AWS CodePipeline, CodeBuild, CodeDeploy, CloudFormation, CloudWatch synthetic monitoring)",
                "name": "Analyzing failed deployments (for example, AWS CodePipeline, CodeBuild, CodeDeploy, CloudFormation, CloudWatch synthetic monitoring)"
              },
              {
                "content": "Analyzing incidents regarding failed processes (for example, auto scaling, Amazon ECS, Amazon EKS)",
                "name": "Analyzing incidents regarding failed processes (for example, auto scaling, Amazon ECS, Amazon EKS)"
              }
            ]
          }
        ]
      },
      {
        "id": "6",
        "name": "Security and Compliance (17%)",
        "taskStatements": [
          {
            "content": "### WhitePaper\n[Identity Management \u0026 Access Control capability](https://docs.aws.amazon.com/whitepapers/latest/establishing-your-cloud-foundation-on-aws/identity-management-access-control-capability.html)\n",
            "id": "6.1",
            "knowledgeOf": [
              {
                "content": "Appropriate usage of different IAM entities for human and machine access (for example, users, groups, roles, identity providers, identity-based policies, resource-based policies, session policies)",
                "name": "Appropriate usage of different IAM entities for human and machine access (for example, users, groups, roles, identity providers, identity-based policies, resource-based policies, session policies)"
              },
              {
                "content": "Identity federation techniques (for example, using IAM identity providers and AWS Single Sign-On)",
                "name": "Identity federation techniques (for example, using IAM identity providers and AWS Single Sign-On)"
              },
              {
                "content": "Organizational SCPs",
                "name": "Permission management delegation by using IAM permissions boundaries"
              }
            ],
            "name": "Implement techniques for identity and access management at scale.",
            "skillsIn": [
              {
                "content": "Designing policies to enforce least privilege access",
                "name": "Designing policies to enforce least privilege access"
              },
              {
                "content": "Implementing role-based and attribute-based access control patterns",
                "name": "Implementing role-based and attribute-based access control patterns"
              },
              {
                "content": "Automating credential rotation for machine identities (for example, Secrets Manager)",
                "name": "Automating credential rotation for machine identities (for example, Secrets Manager)"
              },
              {
                "content": "Managing permissions to control access to human and machine identities (for example, enabling multi-factor authentication [MFA], AWS Security Token Service [AWS STS], IAM profiles)",
                "name": "Managing permissions to control access to human and machine identities (for example, enabling multi-factor authentication [MFA], AWS Security Token Service [AWS STS], IAM profiles)"
              }
            ]
          },
          {
            "id": "6.2",
            "knowledgeOf": [
              {
                "content": "Network security components (for example, security groups, network ACLs, routing, AWS Network Firewall, AWS WAF, AWS Shield)",
                "name": "Network security components (for example, security groups, network ACLs, routing, AWS Network Firewall, AWS WAF, AWS Shield)"
              },
              {
                "content": "Certificates and public key infrastructure (PKI)",
                "name": "Certificates and public key infrastructure (PKI)"
              },
              {
                "content": "Data management (for example, data classification, encryption, key management, access controls)",
                "name": "Data management (for example, data classification, encryption, key management, access controls)"
              }
            ],
            "name": "Apply automation for security controls and data protection.",
            "skillsIn": [
              {
                "content": "Automating the application of security controls in multi-account and multi-Region environments (for example, Security Hub, Organizations, AWS Control Tower, Systems Manager)",
                "name": "Automating the application of security controls in multi-account and multi-Region environments (for example, Security Hub, Organizations, AWS Control Tower, Systems Manager)"
              },
              {
                "content": "Combining security controls to apply defense in depth (for example, AWS Certificate Manager [ACM], AWS WAF, AWS Config, AWS Config rules, Security Hub, GuardDuty, security groups, network ACLs, Amazon Detective, Network Firewall)",
                "name": "Combining security controls to apply defense in depth (for example, AWS Certificate Manager [ACM], AWS WAF, AWS Config, AWS Config rules, Security Hub, GuardDuty, security groups, network ACLs, Amazon Detective, Network Firewall)"
              },
              {
                "content": "Automating the discovery of sensitive data at scale (for example, Amazon Macie)",
                "name": "Automating the discovery of sensitive data at scale (for example, Amazon Macie)"
              },
              {
                "content": "Encrypting data in transit and data at rest (for example, AWS KMS, AWS CloudHSM, ACM)",
                "name": "Encrypting data in transit and data at rest (for example, AWS KMS, AWS CloudHSM, ACM)"
              }
            ]
          },
          {
            "id": "6.3",
            "knowledgeOf": [
              {
                "content": "Security auditing services and features (for example, CloudTrail, AWS Config, VPC Flow Logs, CloudFormation drift detection)",
                "name": "Security auditing services and features (for example, CloudTrail, AWS Config, VPC Flow Logs, CloudFormation drift detection)"
              },
              {
                "content": "AWS services for identifying security vulnerabilities and events (for example, GuardDuty, Amazon Inspector, IAM Access Analyzer, AWS Config)",
                "name": "AWS services for identifying security vulnerabilities and events (for example, GuardDuty, Amazon Inspector, IAM Access Analyzer, AWS Config)"
              },
              {
                "content": "Common cloud security threats (for example, insecure web traffic, exposed AWS access keys, S3 buckets with public access enabled or encryption disabled)",
                "name": "Common cloud security threats (for example, insecure web traffic, exposed AWS access keys, S3 buckets with public access enabled or encryption disabled)"
              }
            ],
            "name": "Implement security monitoring and auditing solutions.",
            "skillsIn": [
              {
                "content": "Implementing robust security auditing",
                "name": "Implementing robust security auditing"
              },
              {
                "content": "Configuring alerting based on unexpected or anomalous security events",
                "name": "Configuring alerting based on unexpected or anomalous security events"
              },
              {
                "content": "Analyzing logs, metrics, and security findings",
                "name": "Analyzing logs, metrics, and security findings"
              }
            ]
          }
        ]
      }
    ],
    "name": "AWS Certified DevOps Engineer - Professional"
  }
}
