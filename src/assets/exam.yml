exam:
  name: "AWS Certified DevOps Engineer - Professional"
  domains:
    - id: "0"
      name: "Useful Resources"
      taskStatements:
        - id: "0.1"
          name: "Reference"
          content: |
            ### AWS Architecture Center
            - [Reference architecture examples and diagrams](https://aws.amazon.com/architecture/?cards-all.sort-by=item.additionalFields.sortDate&cards-all.sort-order=desc&awsf.content-type=*all&awsf.methodology=*all&awsf.tech-category=*all&awsf.industries=*all&awsf.business-category=*all)
            ### AWS Solutions Library
            - [AWS Solutions Library](https://aws.amazon.com/solutions/)
            ### Customer Success
            - [Customer Success](https://aws.amazon.com/solutions/case-studies/?nc1=f_cc%20AW&customer-references-cards.sort-by=item.additionalFields.sortDate&customer-references-cards.sort-order=desc&awsf.customer-references-location=*all&awsf.customer-references-industry=*all&awsf.customer-references-use-case=*all&awsf.language=language%23english)
            ### AWS Compliance Programs
            - [AWS Compliance Programs](https://aws.amazon.com/compliance/programs/)
        - id: "0.2"
          name: "Tooling / Technical"
          content: |
            ### Github Labs
            - [Amazon Web Services - Labs](https://github.com/awslabs)
            ### AWS CLI
            #### Auto prompt
            Inspired from aws-shell in aws labs
            ```shell
            aws  --cli-auto-prompt # or export AWS_CLI_AUTO_PROMPT=on
            ```
            #### Formatting
            ```shell
            --output, --query, --profile
            ```
            ### AWS IP Ranges
            - [AWS IP address ranges](https://docs.aws.amazon.com/general/latest/gr/aws-ip-ranges.html)
            ### Error Retries and Exponential Backoff in AWS
            - [Retry behavior](https://docs.aws.amazon.com/sdkref/latest/guide/feature-retry-behavior.html)
            ### AWS Services by Region
            - [List of AWS Services Available by Region](https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/)
            ### AWS Service Endpoints
            - [AWS service endpoints](https://docs.aws.amazon.com/general/latest/gr/rande.html)
            ### AWS service Quotas 
            - [AWS service quotas](https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html)
        - id: "0.3"
          name: "User Forum and misc"
          content: |
            ### AWS re:Post (previously Forum)
            - [Welcome to AWS re:Post](https://repost.aws/)
            ### AWS Certification
            - [AWS Certification](https://aws.amazon.com/certification/)
            ### AWS Architecture Icons
            - [AWS Architecture Icons](https://aws.amazon.com/architecture/icons/)
        - id: "0.4"
          name: "Unmatching (yet interesting) links"
          content: |
            ### DynamoDB
            - [Change data capture for DynamoDB Streams](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html)
            ### AWS Well-Architected Labs
            - [AWS Well-Architected Labs](https://wellarchitectedlabs.com/)
    - id: "1"
      name: "SDLC Automation (22%)"
      content: |
        ## This is the first domain for the certification
      taskStatements:
        - id: "1.1"
          name: "Implement CI/CD pipelines"
          knowledgeOf:
            - name: "Software development lifecycle (SDLC), concepts, phases and models"
              content: |
                - [Concepts](https://aws.amazon.com/what-is/sdlc/#seo-faq-pairs#what-is-sdlc)
                - [Phases](https://aws.amazon.com/what-is/sdlc/#seo-faq-pairs#how-does-sdlc-work)
                  - Plan
                  - Design
                  - Plan
                  - Design
                  - Implement
                  - Test
                  - Deploy
                  - Maintain
                - [Models](https://aws.amazon.com/what-is/sdlc/#seo-faq-pairs#what-are-sdlc-models)
                  - Waterfall
                  - Iterative
                  - Spiral
                  - Agile
            - name: "Pipeline deployment patterns for single and multi-account environments"
              content: |
                ### Patterns
                - [Blog:Deployment Pipeline Reference Architecture](https://aws.amazon.com/blogs/aws/new_deployment_pipelines_reference_architecture_and_-reference_implementations/)
                - [Blog:Automating safe, hands-off deployments](https://aws.amazon.com/builders-library/automating-safe-hands-off-deployments/) Claire Ligori article in [The Amazon Builders' Library](https://aws.amazon.com/builders-library/?cards-body.sort-by=item.additionalFields.sortDate&cards-body.sort-order=desc&awsf.filter-content-category=*all&awsf.filter-content-type=*all&awsf.filter-content-level=*all)
                ### Single
                - Set up a CI/CD pipeline by using AWS CodePipeline and AWS CDK [prescriptive-guidance](https://docs.aws.amazon.com/prescriptive-guidance/latest/patterns/set-up-a-ci-cd-pipeline-by-using-aws-codepipeline-and-aws-cdk.html?did=pg_card&trk=pg_card)
                ### Multiple accounts
                - Use AWS CodeCommit and AWS CodePipeline to deploy a CI/CD pipeline in multiple AWS accounts [workshop](https://docs.aws.amazon.com/prescriptive-guidance/latest/patterns/use-aws-codecommit-and-aws-codepipeline-to-deploy-a-ci-cd-pipeline-in-multiple-aws-accounts.html)
                - Building a Cross-account CI/CD Pipeline [workshop](https://catalog.us-east-1.prod.workshops.aws/workshops/00bc829e-fd7c-4204-9da1-faea3cf8bd88/en-US)
                ### CodeDeploy
                - [Deploy an application in a different AWS account](https://docs.aws.amazon.com/codedeploy/latest/userguide/deployments-cross-account.html)
                  - Use case: You work primarily in the development account, but you want to be able kick off deployments in your production account without a full set of credentials there or without having to sign out of the development account and in to the production account.
          skillsIn:
            - name: "Configuring code, image, and artifact repositories"
              content: |
                ### Code commit
                - [Setting up in User Guide](https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up.html)
                - [Customer managed policy examples](https://docs.aws.amazon.com/codecommit/latest/userguide/customer-managed-policies.html)
                - [Limit pushes and merges to branches in AWS CodeCommit](https://docs.aws.amazon.com/codecommit/latest/userguide/how-to-conditional-branch.html)
                - HTTPS
                  - [Setup for HTTPS users using Git credentials](https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-gc.html)
                  |Step|Action|
                  |---|---|
                  |1.|IAM > Users > (Select User) > (Select Security Credendials Tab)|
                  |2.|(HTTPS Git Credentials for AWS CodeCommit)> (Generate)|
                  |3.|(Copy credentials)|
                - SSH
                  - [Setup for SSH users not using the AWS CLI](https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-without-cli.html)
                - IAM
                  - [Identity and Access Management for AWS CodeCommit](https://docs.aws.amazon.com/codecommit/latest/userguide/security-iam.html)
                  - [How AWS CodeCommit works with IAM](https://docs.aws.amazon.com/codecommit/latest/userguide/security_iam_service-with-iam.html)
                ### ECR
                - [Setting up in User Guide](https://docs.aws.amazon.com/AmazonECR/latest/userguide/get-set-up-for-amazon-ecr.html)
                ### Code Artifact
                - [UserGuide:What is AWS CodeArtifact?](https://docs.aws.amazon.com/codeartifact/latest/ug/welcome.html)
                - [Blog:Code Artifact](https://aws.amazon.com/blogs/devops/category/developer-tools/aws-code-artifact/)
            - name: "Using version control to integrate pipelines with application environments"
              content: |
                ### CI/CD
                - [Blog:Complete CI/CD with AWS CodeCommit, AWS CodeBuild, AWS CodeDeploy, and AWS CodePipeline](https://aws.amazon.com/blogs/devops/complete-ci-cd-with-aws-codecommit-aws-codebuild-aws-codedeploy-and-aws-codepipeline/)
                ### CodePipeline
                - [DevOps pipeline example](https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts-devops-example.html)
                ### CloudWatch integration in CodePipeline
                - [Continuous delivery with CodePipeline](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline.html)
            - name: "Setting up build processes (e.g AWS CodeBuild)"
              content: |
                ### CodeBuild
                - [Plan a build in AWS CodeBuild](https://docs.aws.amazon.com/codebuild/latest/userguide/planning.html)
                - [Workshop:CI/CD Pipeline/AWS CodeBuild](https://catalog.us-east-1.prod.workshops.aws/workshops/fff8e490-f397-43d2-ae26-737a6dc4ac68/en-US/50-build-ci-cd-pipeline/52-set-up-codebuild)
                - [CodeBuild CheatSheet](https://tutorialsdojo.com/aws-codebuild/)
                ### Jenkins
                - [Setting up a CI/CD pipeline by integrating Jenkins with AWS CodeBuild and AWS CodeDeploy](https://aws.amazon.com/blogs/devops/setting-up-a-ci-cd-pipeline-by-integrating-jenkins-with-aws-codebuild-and-aws-codedeploy/)
            - name: "Managing build and deployment secrets (e.g, AWS Secrets Manager, AWS Systems Manager, Parameter Store)"
              content: |
                ### Building well-architected serverless applications
                - [Implementing application workload security â€“ part 1](https://aws.amazon.com/fr/blogs/compute/building-well-architected-serverless-applications-implementing-application-workload-security-part-1/)
                - [Implementing application workload security â€“ part 2](https://aws.amazon.com/fr/blogs/compute/building-well-architected-serverless-applications-implementing-application-workload-security-part-2/)
                ### Secrets Manager
                - [UserGuide:Intro](https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html)
                ### Parameter Store
                - [UserGuide](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-parameter-store.html)
        - id: "1.2"
          name: "Integrate automated testing into CI/CD pipelines"
          knowledgeOf:
            - name: "Different types of tests (e.g, unit tests, integration tests, acceptance tests, user interface tests, security scans)"
              content: |
                ### Test types
                - [Unit Test](https://saturncloud.io/blog/unit-test-integration-test-regression-test-acceptance-test/#what-is-a-unit-test)
                - [Integration Test](https://saturncloud.io/blog/unit-test-integration-test-regression-test-acceptance-test/#what-is-an-integration-test)
                - [Acceptance Test](https://saturncloud.io/blog/unit-test-integration-test-regression-test-acceptance-test/#what-is-an-acceptance-test)
                - [User Interface Test](https://en.wikipedia.org/wiki/Graphical_user_interface_testing)
                ### Image scanning
                - [Vulnerability scanning and penetration testing](https://docs.aws.amazon.com/whitepapers/latest/architecting-hipaa-security-and-compliance-on-amazon-eks/vulnerability-scanning-and-penetration-testing.html)
                - [ECR Image Scanning](https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning-basic.html)
                - [Inspector](https://docs.aws.amazon.com/inspector/latest/user/scanning-ecr.html)
            - name: "Reasonable use of different types of tests at different stages of the CI/CD pipeline"
              content: |
                ### CodeBuild
                - [Add test](https://docs.aws.amazon.com/codebuild/latest/userguide/how-to-create-pipeline.html#how-to-create-pipeline-add-test)
                - [Workshop](https://catalog.workshops.aws/cicdonaws/en-US/lab03/2-build-and-test)
                - [Api Testing with Postman](https://aws.amazon.com/fr/blogs/devops/automating-your-api-testing-with-aws-codebuild-aws-codepipeline-and-postman/)
          skillsIn:
            - name: "Running builds or tests when generating pull requests or code merges (e.g, AWS CodeCommit, CodeBuild)"
              content: |
                ### Pull Request in CodeCommit
                - [Validating AWS CodeCommit Pull Requests with AWS CodeBuild and AWS Lambda](https://aws.amazon.com/fr/blogs/devops/validating-aws-codecommit-pull-requests-with-aws-codebuild-and-aws-lambda/)
                - [Creating a AWS CodeCommit Pull Request Workflow with Terraform](https://medium.com/@kpiroddi/creating-a-aws-codecommit-pull-request-workflow-with-terraform-2e57138cef95)
                ### GitHub BitBucket
                - [Tracking the AWS CodePipeline build status from the third-party Git repository](https://aws.amazon.com/fr/blogs/devops/aws-codepipeline-build-status-in-a-third-party-git-repository/)
                - [CodeBuild:GitHub webhook events](https://docs.aws.amazon.com/codebuild/latest/userguide/github-webhook.html)
            - name: "Running load/stress tests, performance benchmarking, and application testing at scale"
              content: |
                ### Distributed Load Testing on AWS
                - [Automate the testing of your software applications at scale](https://docs.aws.amazon.com/solutions/latest/distributed-load-testing-on-aws/solution-overview.html)
            - name: "Measuring application health based on application exit codes"
              content: |
                Linux and Unix exit code tutorial with examples [link](https://shapeshed.com/unix-exit-codes/)
            - name: "Automating unit tests and code coverage"
              content: |
                ### CodeBuild
                - [Create a test report](https://docs.aws.amazon.com/codebuild/latest/userguide/report-create.html)
                - [Code coverage reports](https://docs.aws.amazon.com/codebuild/latest/userguide/code-coverage-report.html)
                - [Blog: AWS CodeCatalyst](https://aws.amazon.com/blogs/devops/maintaining-code-quality-with-amazon-codecatalyst-reports/)
            - name: "Invoking AWS services in a pipeline for testing"
              content: |
                ### CodePipeline
                - [Action structure reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/action-reference.html)
                - [CodePipeline pipeline structure reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html)
                - [Adding Lambda actions](https://docs.aws.amazon.com/whitepapers/latest/practicing-continuous-integration-continuous-delivery/building-the-pipeline.html#adding-lambda-actions)
        - id: "1.3"
          name: "Build and manage artifacts."
          knowledgeOf:
            - name: "Artifact use cases and secure management"
              content: |
                ### Artifact management
                - [CodeArtifact Release Note](https://aws.amazon.com/fr/blogs/aws/software-package-management-with-aws-codeartifact/)
                - [AWS CodeArtifact vs. Artifactory](https://jfrog.com/blog/aws-codeartifact-vs-artifactory-for-binary-management/)
            - name: "Methods to create and generate artifacts"
              content: |
                ### CodeArtifact
                - [AWS CodeArtifact â€” the long-awaited feature](https://medium.com/@pawel.piwosz/aws-codeartifact-the-long-awaited-feature-7c3757b274e9)
                - [AWS CodeArtifact should be the place to store AWS code artifacts](https://ben11kehoe.medium.com/aws-codeartifact-should-be-the-place-to-store-aws-code-artifacts-1cb9b8249ccf)
            - name: "Artifact lifecycle considerations"
              content: |
                ### Principle
                - [Unified Process](https://en.wikipedia.org/wiki/Unified_Process)
                - [Artifact Evolution Over Life Cycle](https://www.geeksforgeeks.org/artifact-evolution-over-life-cycle/)
          skillsIn:
            - name: Creating and configuring artifact repositories (e.g. CodeArtifact, S3, ECR)
              content: |
                ### CodeArtifact
                - [Workshop:AWS CodeArtifact](https://catalog.us-east-1.prod.workshops.aws/workshops/752fd04a-f7c3-49a0-a9a0-c9b5ed40061b/en-US/codeartifact)
                ### Amazon S3
                - [Pipeline with S3](https://dev.classmethod.jp/articles/aws-codepipeline-cd-pipeline-with-s3/)
                ### Amazon Elastic Container Registry [Amazon ECR]
                - [Amazon ECR private repositories](https://docs.aws.amazon.com/AmazonECR/latest/userguide/Repositories.html)
            - name: "Configuring build tools for generating artifacts (e.g, CodeBuild, AWS Lambda)"
              content: |
                ### CodeBuild
                - [Using CodeArtifact with CodeBuild](https://docs.aws.amazon.com/codeartifact/latest/ug/codebuild.html)
                - [AWS::CodeBuild::Project Artifacts](https://docs.aws.amazon.com/fr_fr/AWSCloudFormation/latest/UserGuide/aws-properties-codebuild-project-artifacts.html)
                ### AWS Lambda
                - [Deploy Java Lambda functions with .zip or JAR file archives](https://docs.aws.amazon.com/lambda/latest/dg/java-package.html)
                - [Deploy Java Lambda functions with container images](https://docs.aws.amazon.com/lambda/latest/dg/java-image.html)
                - [Working with .zip file archives for Python Lambda functions](https://docs.aws.amazon.com/lambda/latest/dg/python-package.html)
                - [AWS::Lambda::Function Code](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html)
                  - Changes to a deployment package in Amazon S3 or a container image in ECR are not detected automatically during stack updates. To update the function code, change the object key or version in the template.
                - [Invoke an AWS Lambda function in a pipeline in CodePipeline](https://docs.aws.amazon.com/codepipeline/latest/userguide/actions-invoke-lambda-function.html)
            - name: "Automating Amazon EC2 instance and container image build processes (e.g, EC2 Image Builder)"
              content: |
                ### EC2 Image Builder
                - [Automate OS Image Build Pipelines with EC2 Image Builder](https://aws.amazon.com/blogs/aws/automate-os-image-build-pipelines-with-ec2-image-builder/)
                - [Amazon EC2 Image Builder Samples](https://github.com/aws-samples/amazon-ec2-image-builder-samples)
                - [Amazon managed STIG hardening components for EC2 Image Builder](https://docs.aws.amazon.com/imagebuilder/latest/userguide/ib-stig.html#linux-os-stig)
                ### Systems Manager Automation
                - [Creating Packer images using AWS System Manager Automation](https://aws.amazon.com/blogs/mt/creating-packer-images-using-system-manager-automation/)
                ### Migrating from Packer to EC2 Image Builder
                - [Migrating from Packer to EC2 Image Builder](https://geeks.wego.com/migrating-jenkins-from-packer-to-ec2-image-builder/)
                ### WorkShop
                - [Building golden images using Amazon EC2 Image Builder](https://catalog.us-east-1.prod.workshops.aws/workshops/d6c7ecdc-c75f-4ad1-910f-fdd994cc4aed/en-US/100-ec2-ib)
                ### AWS Cloud Operations & Migrations Blog
                - [Create immutable servers using EC2 Image Builder and AWS CodePipeline](https://aws.amazon.com/blogs/mt/create-immutable-servers-using-ec2-image-builder-aws-codepipeline/)
                - [GitHub: Create immutable servers using EC2 Image Builder and AWS CodePipeline](https://github.com/aws-samples/immutable-server-pipeline)
        - id: "1.4"
          name: "Implement deployment strategies for instance, container, and serverless environments."
          knowledgeOf:
            - name: "Deployment methodologies for various platforms (e.g. EC2, ECS, EKS, Lambda)"
              content: |
                ### Practicing Continuous Integration and Continuous Delivery on AWS
                - [Deployment methods](https://docs.aws.amazon.com/whitepapers/latest/practicing-continuous-integration-continuous-delivery/deployment-methods.html)

                ### __In-Place Deployments__
                Updates the application version without replacing any infrastructure components. Basically, all the instances are stopped, and then the latest version is installed.
                #### Pros
                - Do not need new infrastructure
                - Minimizes infrastructure costs and management overhead
                #### Cons
                - Application availability is affected
                - Rollback (You need to install again the old version)
                ### __Blue/Green Deployments__
                In this strategy, you have two separate but identical environments (Environment Blue and Green). 
                - __[Environment Green]__: running current application version; 
                - __[Environment Blue]__: running the new application version.
                #### Pros
                - Application availability is not affected
                - Reduces deployment risk (easy rollback, just need to swap URL)
                - Zero downtime
                #### Cons
                - Deployment time
                - Extra cost

                After the green environment is ready and tested, production traffic is redirected from blue to green. If any problem is found, you can redirect the traffic to the blue environment again.

                ### __Canary Deployments__
                This is a subset of Blue/Green deployment. The only difference is, you redirect just a percentage of the users for the green environment (could be 10% or something), the other users (90%) stays in the blue environment. If the green environment is not operating as expected, you can route the 10% traffic back to the blue environment. The big advantage of this strategy, only a small percentage of the users were impacted.
                #### Pros
                - Application availability is not affected
                - Reduces deployment risk (easy rollback, just need to swap URL)
                - Zero downtime
                - Just a small percentage of the users are impacted if the new environment is not working as expected.
                #### Cons
                - Deployment time
                - Extra cost

                ### __Linear Deployments__
                This is a subset of Blue/Green deployment. Just like canary deployment, but with this strategy the traffic is shifted in equal increments with an equal number of minutes between each increment. Something like every 3 minutes 10% of traffic will be shifted from Blue to Green environment until achieving 100%.
                #### Pros
                - Application availability is not affected
                - Reduces deployment risk (easy rollback, just need to swap URL)
                - Zero downtime
                - Just a small percentage of the users are impacted if the new environment is not working as expected.
                #### Cons
                - Deployment time
                - Extra cost

                ### __All-at-once Deployments__
                This is another subset of Blue/Green deployment, but all traï¬ƒc is shifted from the original task set to the updated task set all at once, instead of shift the traffic in small steps.
                #### Pros
                - Application availability is not affected
                - Reduces deployment risk (easy rollback, just need to swap URL)
                - Zero downtime
                #### Cons
                - Deployment time (Within the Blue/Green deployments this is the faster one)
                - Extra cost

                ### Deployment on Services
                - [CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations.html)
                - [AutoScaling Group](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html#cfn-attributes-updatepolicy-replacingupdate)
                - Amazon EC2
                - Amazon Elastic Container Service [Amazon ECS]
                - [Amazon Elastic Kubernetes Service [Amazon EKS]](https://awstip.com/best-deployment-strategies-on-aws-eks-roll-out-like-a-pro-bd2d9deadc01)
                - [Amazon Lambda](https://lumigo.io/aws-lambda-deployment/canary-deployment-for-aws-lambda/)
            - name: "Application storage patterns (e.g. EFS, S3, EBS)"
              content: |
                ### EFS
                - [[UserGuide] What is Amazon Elastic File System?](https://docs.aws.amazon.com/efs/latest/ug/whatisefs.html)
                - [FAQ](https://aws.amazon.com/efs/faq/?nc1=h_ls)
                - [Amazon Elastic File System [Amazon EFS] Cheat Sheet](https://tutorialsdojo.com/amazon-efs/)
                ### EBS
                - [UserGuide](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html)
                - [FAQ](https://aws.amazon.com/ebs/faqs/?nc1=h_ls)
                - [Amazon Elastic Block Store [Amazon EBS] Cheat Sheet](https://tutorialsdojo.com/amazon-ebs/)
                ### S3
                - [[UserGuide] What is Amazon S3?](https://docs.aws.amazon.com/AmazonS3/latest/userguide/Welcome.html)
                - [FAQ](https://aws.amazon.com/s3/faqs/?nc1=h_ls)
                - [Amazon S3 Cheat Sheet](https://tutorialsdojo.com/amazon-s3/)
            - name: Mutable deployment patterns in contrast to immutable deployment patterns
              content: |
                ### Deployment patterns
                - [Blog: Mutable vs. Immutable Infrastructure](https://blog.isweluiz.com.br/2022/10/mutable-vs-immutable-infrastructure.html)
                ### Elastic Beanstalk
                - [EB UserGuide: Immutable environment updates](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environmentmgmt-updates-immutable.html)
            - name: Tools and services available for distributing code (e.g, CodeDeploy, EC2 Image Builder)
              content: |
                ### AWS Developer tools
                - [AWS Cheat Sheets:AWS Developer Tools Overview](https://digitalcloud.training/aws-developer-tools/)
                - [EC2 Image Builder FAQs](https://aws.amazon.com/image-builder/faqs/?nc1=h_ls)
                ### CodeDeploy
                - [Working with instances for CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/instances.html)
                - [CodeDeploy AppSpec file reference](https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file.html)
                - AppSpec for an EC2/On-Premises deployment
                  - [AppSpec File example for an EC2/On-Premises deployment](https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-example.html#appspec-file-example-server)
                  - [AppSpec 'hooks' section for an EC2/On-Premises deployment](https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html#appspec-hooks-server)
                - AppSpec ECS
                  - [AppSpec File example for an Amazon ECS deployment](https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-example.html#appspec-file-example-ecs)
                  - [AppSpec 'hooks' section for an Amazon ECS deployment](https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html#appspec-hooks-ecs](https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html#appspec-hooks-ecs)
                - AppSpec Lambda
                  - [AppSpec File example for an AWS Lambda deployment](https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-example.html#appspec-file-example-lambda)
                  - [AppSpec 'hooks' section for an AWS Lambda deployment](https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html#appspec-hooks-lambda)
                - [Configure advanced options for a deployment group](https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-groups-configure-advanced-options.html)
          skillsIn:
            - name: Configuring security permissions to allow access to artifact repositories (e.g. IAM, CodeArtifact)
              content: |
                ### CodeArtifact
                - [CodeArtifact UserGuide:How AWS CodeArtifact works with IAM](https://docs.aws.amazon.com/codeartifact/latest/ug/security_iam_service-with-iam.html)
                - [CodeArtifact UserGuide:Repository policies](https://docs.aws.amazon.com/codeartifact/latest/ug/repo-policies.html#granting-read-access-to-specific-principals)
                - [Article:Secure AWS CodeArtifact access for isolated Amazon SageMaker notebook instances](https://dataintegration.info/secure-aws-codeartifact-access-for-isolated-amazon-sagemaker-notebook-instances)
            - name: Configuring deployment agents (e.g, CodeDeploy agent)
              content: |
                ### CodeDeploy Agent
                - [CodeDeploy UserGuide:Working with the CodeDeploy agent](https://docs.aws.amazon.com/codedeploy/latest/userguide/codedeploy-agent.html)
                - [How can I use launch templates to automatically install the CodeDeploy agent on an Amazon EC2 instance running Amazon Linux or Ubuntu?](https://repost.aws/knowledge-center/codedeploy-agent-launch-template)
            - name: Troubleshooting deployment issues
              content: |
                ### CodeDeploy
                - [CodeDeploy UserGuide:Troubleshooting CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/troubleshooting.html)
            - name: Using different deployment methods (e.g, blue/green, canary)
              content: |
                ### Docs
                - [Article:Deployment Strategies for Lambda in SAM](https://osamaoracle.com/2021/11/13/deployment-strategies/)
                - [Medium:AWS Deployment Strategies](https://jafreitas90.medium.com/aws-deployment-strategies-ebc910420bf2)
                - [AWS WhitePaper:Overview of Deployment Options on AWS](https://d1.awsstatic.com/whitepapers/overview-of-deployment-options-on-aws.pdf)
                ### WhitePaper
                - [Blue/Green Deployments on AWS](https://d0.awsstatic.com/whitepapers/AWS_Blue_Green_Deployments.pdf)
                ### Elastic Beanstalk
                - [Deploying applications to Elastic Beanstalk environments](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.deploy-existing-version.html)
                - [Deployment policies and settings](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.rolling-version-deploy.html)
    - id: "2"
      name: "Configuration Management and IaC (17%)"
      taskStatements:
        - id: "2.1"
          name: "Define cloud infrastructure and reusable components to provision and manage systems throughout their lifecycle"
          knowledgeOf:
            - name: "Infrastructure as code (IaC) options and tools for AWS"
              content: |
                ### CloudFormation
                - [[CloudFormation UserGuide] What is AWS CloudFormation?](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/Welcome.html)
                ### CDK
                - [[CDK User Guide] What is the AWS CDK?](https://docs.aws.amazon.com/cdk/v2/guide/home.html)
                ### SAM
                - [[SAM Dev Guide] What is the AWS Serverless Application Model (AWS SAM)?](https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html)
                - [The Complete AWS SAM Workshop](https://catalog.workshops.aws/complete-aws-sam/en-US)
                - [Using container image support for AWS Lambda with AWS SAM](https://aws.amazon.com/blogs/compute/using-container-image-support-for-aws-lambda-with-aws-sam/)
                ### AppRunner
                - [App Runner architecture and concepts](https://docs.aws.amazon.com/apprunner/latest/dg/architecture.html)
                - [How App Runner works with IAM](https://docs.aws.amazon.com/apprunner/latest/dg/security_iam_service-with-iam.html)
            - name: "Change management processes for IaC-based platforms"
              content: |
                ### AWS WhitePaper
                - [[WhitePaper] Change Management in the Cloud](https://docs.aws.amazon.com/whitepapers/latest/change-management-in-the-cloud/change-management-in-the-cloud.html)
            - name: Configurations management services and strategies
              content: |
                ### AWS WhitePaper
                - [[WhitePaper] Configuration management](https://docs.aws.amazon.com/whitepapers/latest/aws-caf-operations-perspective/configuration-management.html)
          skillsIn:
            - name: Composing and deploying IaC templates (e.g. SAM, CloudFormation, CDK)
              content: |
                ### AWS Serverless Application Model [AWS SAM]
                - [[UserGuide] AWS SAM template anatomy](https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy.html)
                ### AWS CloudFormation
                - [[UserGuide] Working with AWS CloudFormation templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-guide.html)
                - [AWS CloudFormation best practices](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/best-practices.html)
                - [Updating stacks using change sets](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-changesets.html)
                - [aws . cloudformation . create-change-set](https://docs.aws.amazon.com/cli/latest/reference/cloudformation/create-change-set.html)
                - [Creating wait conditions in a template](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-waitcondition.html)
                - [Working with nested stacks](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-nested-stacks.html)
                - [DeletionPolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html)
                - [Conditions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/conditions-section-structure.html)
                  - The optional Conditions section contains statements that define the circumstances under which entities are created or configured
                - [Acknowledging IAM resources in AWS CloudFormation templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities)
                - [Custom resources](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources.html)
                - [Use cross-stack references to export shared resources](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/best-practices.html#cross-stack)
                ### AWS Cloud Development Kit [AWS CDK]
                - [[Developer Guide] Core Concepts](https://docs.aws.amazon.com/cdk/v2/guide/core_concepts.html)
                ### SAM
                - [Managing resource permissions with AWS SAM connectors](https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/managing-permissions-connectors.html)
            - name: Applying AWS CloudFormation StackSets across multiple accounts and AWS Regions
              content: |
                ### AWS Cloudformation
                - [[UserGuide] Working with AWS CloudFormation StackSets](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/what-is-cfnstacksets.html)
                - [[UserGuide] Prerequisites for stack set operations](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html)
                - [Troubleshooting AWS CloudFormation StackSets](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-troubleshooting.html)
                - [Grant self-managed permissions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html#prereqs-self-managed-permissions)
                - [Activate trusted access with AWS Organizations](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-activate-trusted-access.html)
            - name: Determining optimal configuration management services (e.g. AWS OpsWorks, AWS Systems Manager, AWS Config, AWS AppConfig)
              content: |
                ### OpsWorks Stacks
                - [[Blog] Migrate your AWS OpsWorks Stacks to AWS Systems Manager](https://aws.amazon.com/fr/blogs/mt/migrate-your-aws-opsworks-stacks-to-aws-systems-manager/)
                - [Migrating your AWS OpsWorks Stacks applications to AWS Systems Manager Application Manager](https://docs.aws.amazon.com/opsworks/latest/userguide/migrating-to-systems-manager.html)
                - [AWS OpsWorks Stacks Lifecycle Events](https://docs.aws.amazon.com/opsworks/latest/userguide/workingcookbook-events.html)
                  - Setup, Deploy, Undeploy, Shutdown,
                  - Configure : This event occurs on all of the stack's instances when one of the following occurs:
                    - An instance enters or leaves the online state.
                    - You associate an Elastic IP address with an instance or disassociate one from an instance.
                    - You attach an Elastic Load Balancing load balancer to a layer, or detach one from a layer.
                ### AWS Systems Manager Explorer
                - [AWS Systems Manager Explorer](https://docs.aws.amazon.com/systems-manager/latest/userguide/Explorer.html)
                ### AWS AppConfig
                - [What Is AWS AppConfig?](https://docs.aws.amazon.com/appconfig/latest/userguide/what-is-appconfig.html)
                ### AWS Config
                - [What Is AWS Config?](https://docs.aws.amazon.com/config/latest/developerguide/WhatIsConfig.html)
            - name: Implementing infrastructure patterns, governance controls, and security standards into reusable IaC templates (e.g. AWS Service Catalog, CloudFormation modules, AWS CDK)
              content: |
                ### Documentation
                - [How to reuse patterns when developing infrastructure as code](https://d1.awsstatic.com/events/Summits/reinvent2022/DOP302_How-to-reuse-patterns-when-developing-infrastructure-as-code.pdf)
                - [Blog:Cloud governance and compliance on AWS with policy as code](https://aws.amazon.com/fr/blogs/opensource/cloud-governance-and-compliance-on-aws-with-policy-as-code/)
                - [Identity, Security, and Compliance AWS services to help govern your AWS environment](https://docs.aws.amazon.com/whitepapers/latest/establishing-your-cloud-foundation-on-aws/security-assurance-aws.html#identity-security-compliance-services)
                ### Service Catalog
                - [What Is Service Catalog?](https://docs.aws.amazon.com/servicecatalog/latest/adminguide/introduction.html)
                - [AWS Service Catalog FAQs](https://aws.amazon.com/servicecatalog/faqs/)
                - [AWS CloudFormation support for AWS Service Catalog products](https://aws.amazon.com/blogs/mt/how-to-launch-secure-and-governed-aws-resources-with-aws-cloudformation-and-aws-service-catalog/)
                ### AWS CloudFormation
                - [[Blog] Introducing AWS CloudFormation modules](https://aws.amazon.com/fr/blogs/mt/introducing-aws-cloudformation-modules/)
                - [Developing hooks](https://docs.aws.amazon.com/cloudformation-cli/latest/userguide/hooks.html#hooks-characteristics)
                - [Open Policy Agent CloudFormation Hooks](https://www.openpolicyagent.org/docs/latest/aws-cloudformation-hooks/)
                ### CDK
                - [CDK Patterns](https://cdkpatterns.com/patterns/all/)
        - id: "2.2"
          name: Deploy automation to create, onboard, and secure AWS accounts in a multi-account/multi-Region environment.
          knowledgeOf:
            - name: AWS account structures, best practices, and related AWS services
              content: |
                ### Reference Guide
                - [Welcome to the AWS Account Management Reference Guide](https://docs.aws.amazon.com/accounts/latest/reference/accounts-welcome.html)
                - [Do I need multiple AWS accounts?](https://docs.aws.amazon.com/accounts/latest/reference/welcome-multiple-accounts.html)
                ### WhitePaper
                - [Organizing Your AWS Environment Using Multiple Accounts](https://docs.aws.amazon.com/whitepapers/latest/organizing-your-aws-environment/organizing-your-aws-environment.html)
                - [Benefits of using multiple AWS accounts](https://docs.aws.amazon.com/whitepapers/latest/organizing-your-aws-environment/benefits-of-using-multiple-aws-accounts.html)
                - [Establishing Your Cloud Foundation on AWS](https://docs.aws.amazon.com/whitepapers/latest/establishing-your-cloud-foundation-on-aws/welcome.html)
                ### AWS Organizations
                - [Best practices for multi-account management](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_best-practices.html)
                ### AWS Prescriptive Guidance
                - [Apply security services across your AWS organization](https://docs.aws.amazon.com/prescriptive-guidance/latest/security-reference-architecture/security-services.html)
          skillsIn:
            - name: Standardizing and automating account provisioning and configuration
              content: |
                ### WhitePaper
                - [Design principles for your multi-account strategy](https://docs.aws.amazon.com/whitepapers/latest/organizing-your-aws-environment/design-principles-for-your-multi-account-strategy.html#organize-based-on-security-and-operational-needs)
                ### AWS Control Tower
                - [AWS Control Tower Features](https://aws.amazon.com/fr/controltower/features/#:~:text=A%20landing%20zone%20is%20a,federated%20access%2C%20and%20account%20structure.)
            - name: Creating, consolidating, and centrally managing accounts (e.g, AWS Organizations, AWS Control Tower)
              content: |
                ### AWS Organizations
                - [What is AWS Organizations?](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_introduction.html)
                - [Viewing last accessed information for Organizations](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor-view-data-orgs.html)
                ### AWS Control Tower
                - [What Is AWS Control Tower?](https://docs.aws.amazon.com/controltower/latest/userguide/what-is-control-tower.html)
                - [WorkShop](https://controltower.aws-management.tools/core/overview/)
                ### Github
                - [Deploy and manage AWS Control Tower controls by using Terraform](https://github.com/aws-samples/aws-control-tower-controls-terraform)
            - name: Applying IAM solutions for multi-account and complex organization structures (e.g, SCPs, assuming roles)
              content: |
                ### WhitePaper
                - [Identity Management & Access Control capability](https://docs.aws.amazon.com/whitepapers/latest/establishing-your-cloud-foundation-on-aws/identity-management-access-control-capability.html)
                - [Service control policies (SCPs)](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html)
                ### IAM
                - [[Access Advisor tab] Example scenarios for using last accessed information](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor-example-scenarios.html)
                ### AWS Organizations
                - [Accessing member accounts in your organization](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html)
                - [Granting a user permissions to switch roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_permissions-to-switch.html)
                - [Creating a role to delegate permissions to an IAM user](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user.html)
            - name: Implementing and developing governance and security controls at scale (AWS Config, AWS Control Tower, AWS Security Hub, Amazon Detective, Amazon GuardDuty, AWS Service Catalog, SCPs)
              content: |
                ### AWS Config
                - [Multi-Account Multi-Region Data Aggregation](https://docs.aws.amazon.com/config/latest/developerguide/aggregate-data.html)
                ### AWS Control Tower
                - [AWS multi-account strategy for your AWS Control Tower landing zone](https://docs.aws.amazon.com/controltower/latest/userguide/aws-multi-account-landing-zone.html)
                ### AWS Security Hub
                - [What is AWS Security Hub?](https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html)
                - [How to Enable Custom Actions in AWS Security Hub](https://aws.amazon.com/blogs/apn/how-to-enable-custom-actions-in-aws-security-hub/)
                ### Amazon Detective
                - [Amazon Detective](https://docs.aws.amazon.com/detective/latest/adminguide/what-is-detective.html)
                ### Amazon GuardDuty
                - [What is Amazon GuardDuty?](https://docs.aws.amazon.com/guardduty/latest/ug/what-is-guardduty.html)
                ### Service Catalog
                - [Compliance Validation for Service Catalog](https://docs.aws.amazon.com/servicecatalog/latest/adminguide/service-catalog-compliance.html)
                - [Security Best Practices for AWS Service Catalog](https://docs.aws.amazon.com/servicecatalog/latest/adminguide/security-best-practices.html)
                ## SCPs
                - [What is AWS SCP (Service Control Policy) and How does it Help with Permissions?](https://www.stormit.cloud/blog/aws-scp-service-control-policy/)
        - id: "2.3"
          name: Design and build automated solutions for complex tasks and large-scale environments.
          knowledgeOf:
            - name: "AWS services and solutions to automate tasks and processes"
              content: |
                ### Step Functions
                - [What is AWS Step Functions?](https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html)
                ### Batch
                - [What Is AWS Batch?](https://docs.aws.amazon.com/batch/latest/userguide/what-is-batch.html)
            - name: "Methods and strategies to interact with the AWS software-defined infrastructure"
              content: |
                ### Documentation
                - [LinkedIn:The methods to interact with AWS and information about regions and availability zones with edge locations](https://www.linkedin.com/pulse/methods-interact-aws-information-regions-availability-jayannavar#:~:text=Methods%20of%20Interacting%20with%20AWS%3A%20We%20can%20interact%20with%20AWS,to%20interact%20with%20AWS%20services.)
                ### AWS CLI
                - [AWS Cli](https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-welcome.html)
                ### Protect Root Account
                - [Best practices to protect your account's root user](https://docs.aws.amazon.com/accounts/latest/reference/best-practices-root-user.html)
                - [Identity and Access Management for AWS Account Management](https://docs.aws.amazon.com/accounts/latest/reference/security-iam.html)
          skillsIn:
            - name: "Automating system inventory, configuration, and patch management (e.g, Systems Manager, AWS Config)"
              content: |
                ### Sytems Manager
                - [AWS Systems Manager Inventory](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-inventory.html)
                - [AWS Systems Manager Patch Manager](https://docs.aws.amazon.com/systems-manager/latest/userguide/patch-manager.html)
                - [Evaluating Resources with AWS Config Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html)
            - name: "Developing Lambda function automations for complex scenarios (e.g, AWS SDKs, Lambda, AWS Step Functions)"
              content: |
                ### SDKs
                - [Lambda examples using SDK for Python (Boto3)](https://docs.aws.amazon.com/code-library/latest/ug/python_3_lambda_code_examples.html)
                ### Step function with lambda
                - [Creating a Step Functions state machine that uses Lambda](https://docs.aws.amazon.com/step-functions/latest/dg/tutorial-creating-lambda-state-machine.html)
            - name: "Automating the configuration of software applications to the desired state (e.g, OpsWorks, Systems Manager State Manager)"
              content: |
                ### AWS OpsWorks 
                - [AWS OpsWorks Stacks](https://docs.aws.amazon.com/opsworks/latest/userguide/welcome_classic.html) /!\ EOL May 26 2024
                - [Using Auto Healing to Replace Failed Instances](https://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-autohealing.html)
                  - if no communication between OpsWorks & instance during 5 minutes > new instance is launched
                - [Installing Custom Cookbooks](https://docs.aws.amazon.com/opsworks/latest/userguide/workingcookbook-installingcustom-enable.html)
                - [Automatically Running Recipes](https://docs.aws.amazon.com/opsworks/latest/userguide/workingcookbook-assigningcustom.html)
                  - layer's lifecycle event -> recipe
                - [Running Docker on AWS OpsWorks](https://aws.amazon.com/blogs/devops/running-docker-on-aws-opsworks/)
                ### AWS Systems Manager State Manager
                - [AWS Systems Manager State Manager](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-state.html)
            - name: "Maintaining software compliance (e.g, Systems Manager)"
              content: |
                ### AWS Systems Manager Compliance
                - [AWS Systems Manager Compliance](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-compliance.html)
    - id: "3"
      name: "Resilient Cloud Solutions (15%)"
      content: |
        ### AWS Well-Architected Framework
        - [Reliability Pillar:Reliability](https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/reliability.html)        
      taskStatements:
        - id: "3.1"
          name: Implement highly available solutions to meet resilience and business requirements.
          knowledgeOf:
            - name: "Multi-AZ and multi-Region deployments (e.g, compute layer, data layer)"
              content: |
                ### Multi-AZ Services
                #### Load Balancer
                - [ALB:Availability Zones for your Application Load Balancer](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-subnets.html)
                - [ALB:Cross-zone load balancing for target groups](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/disable-cross-zone.html)
                #### Auto Scaling Group
                - [ASG:Amazon EC2 Auto Scaling benefits](https://docs.aws.amazon.com/autoscaling/ec2/userguide/auto-scaling-benefits.html)
                #### RDS
                - [RDS:Configuring and managing a Multi-AZ deployment](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.MultiAZ.html)
                - [Amazon RDS Multi-AZ](https://aws.amazon.com/rds/features/multi-az/)
                - [Amazon RDS Read Replicas](https://aws.amazon.com/rds/features/read-replicas/)
                - Upgrading RDS with Read Replica
                  - [[Create read replica] AWS::RDS::DBInstance.SourceDBInstanceIdentifier](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-sourcedbinstanceidentifier)
                  - [AWS::RDS::DBInstance.EngineVersion](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbinstance.html#cfn-rds-dbinstance-engineversion)
                  - [Best Practices for Upgrading Amazon RDS for MySQL and Amazon RDS for MariaDB](https://aws.amazon.com/blogs/database/best-practices-for-upgrading-amazon-rds-for-mysql-and-amazon-rds-for-mariadb/)
                #### Route53
                - [Route53:Adding another Region to your latency-based routing in Amazon Route 53](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/TutorialAddingLBRRegion.html)
                ### Blog: Building highly resilient applications using Amazon Route 53 Application Recovery Controller
                - [Part 1: Single-Region stack](https://aws.amazon.com/blogs/networking-and-content-delivery/building-highly-resilient-applications-using-amazon-route-53-application-recovery-controller-part-1-single-region-stack/)
                - [Part 2: Multi-Region stack](https://aws.amazon.com/blogs/networking-and-content-delivery/building-highly-resilient-applications-using-amazon-route-53-application-recovery-controller-part-2-multi-region-stack/)
                ### WorkShop
                - [Testing resilience of EC2, RDS and AZ using Chaos Engineering](https://www.wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/)
            - name: "SLAs"
              content: |
                ### AWS Services
                - [AWS Service Level Agreement â€“ What you need to know](https://www.logicata.com/blog/aws-service-level-agreement/)
            - name: "Replication and failover methods for stateful services"
              content: |
                ### DynamoDB
                - [Global tables - multi-Region replication for DynamoDB](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GlobalTables.html)
                ### RDS
                -  [Multi-AZ DB instance deployments](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.MultiAZSingleStandby.html)
                ### Aurora
                - [High availability for Amazon Aurora](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.AuroraHighAvailability.html)
                |Feature|Aurora Serverless v1|Aurora Serverless v2|
                |---|---|---|
                |Scale compute & memory capacities seamlessly|X|X|
                |Global database| |X|
                |Multi-AZ| |X|
                |Granular scaling| |X|
                ### S3
                - [Replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/replication.html)
            - name: "Techniques to achieve high availability (e.g, Multi-AZ, multi-Region)"
              content: |
                ### Blog
                - [AWS:Architecture I: How to Get High Availability](https://aws.amazon.com/fr/blogs/startups/how-to-get-high-availability-in-architecture/)
                - [Netapp Blog: AWS High Availability: Compute, SQL and Storage](https://bluexp.netapp.com/blog/understanding-aws-high-availability-compute-sql-and-storage)
                - [cbtnuggets Blog: AWS Architecture: High Availability vs Fault Tolerance](https://www.cbtnuggets.com/blog/certifications/cloud/aws-architecture-high-availability-vs-fault-tolerance)
                ### Presentation
                - [High-Availability in the Cloud Architectural Best Practices](https://s3.amazonaws.com/aws001/guided_trek/GuidedTrek_RightScale_High%20Availability%20in%20the%20Cloud_SanFran.pdf)
          skillsIn:
            - name: "Translating business requirements into technical resiliency needs"
              content: |
                ### Blog
                - [What Is IT Resilience? â€“ Strategy and Planning for Technology Resiliency](https://www.parkplacetechnologies.com/blog/what-is-it-resilience-strategy-and-planning-for-technology-resiliency/)
                ### AWS Well-Architected Framework
                - [Resiliency Requirement Planning](https://docs.aws.amazon.com/wellarchitected/latest/financial-services-industry-lens/resiliency-requirement-planning.html)
            - name: "Identifying and remediating single points of failure in existing workloads"
              content: |
                ### Book
                - [Amazon Web Services in Action: Chapter 13. Designing for fault-tolerance](https://livebook.manning.com/book/amazon-web-services-in-action/chapter-13/)
                ### WhitePaper
                - [Real-Time Communication on AWS: High availability and scalability on AWS](https://docs.aws.amazon.com/whitepapers/latest/real-time-communication-on-aws/high-availability-and-scalability-on-aws.html)
            - name: "Enabling cross-Region solutions where available (e.g, Amazon DynamoDB, Amazon RDS, Amazon Route 53, Amazon S3, Amazon CloudFront)"
              content: |
                ### Amazon DynamoDB
                - [Blog: New â€“ Convert Your Single-Region Amazon DynamoDB Tables to Global Tables](https://aws.amazon.com/fr/blogs/aws/new-convert-your-single-region-amazon-dynamodb-tables-to-global-tables/)
                ### Amazon RDS
                - [Cross-Region read replicas](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RDS_Fea_Regions_DB-eng.Feature.CrossRegionReadReplicas.html)
                - [Cross-Region automated backups](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RDS_Fea_Regions_DB-eng.Feature.CrossRegionAutomatedBackups.html)
                ### Amazon Aurora
                - [Using Amazon Aurora global databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html)
                  - Amazon Aurora global databases span multiple AWS Regions, enabling low latency global reads and providing fast recovery from the rare outage that might affect an entire AWS Region. An Aurora global database has a primary DB cluster in one Region, and up to five secondary DB clusters in different Regions.
                  - Compatibilty:
                    - Aurora MySQL with MySQL 8.0 compatibility, version 3.01.0 and higher
                    - Aurora MySQL with MySQL 5.7 compatibility, version 2.09.1 and higher
                    - Aurora PostgreSQL versions 13.3 and higher, 12.4 and higher, and 11.9 and higher
                - [Disaster Recovery Workshop](https://disaster-recovery.workshop.aws/en/services/databases/aurora.html)
                ### Amazon Route 53
                - [Blog: Using Route 53 Private Hosted Zones for Cross-account Multi-region Architectures](https://aws.amazon.com/fr/blogs/architecture/using-route-53-private-hosted-zones-for-cross-account-multi-region-architectures/)
                - [Workshop: Module 5: Multi-Region Resiliency with Route 53 ARC](https://www.wellarchitectedlabs.com/reliability/disaster-recovery/workshop_5/)
                - [Workshop: Route 53 - Failover in Private DNS](https://disaster-recovery.workshop.aws/en/labs/basics/route53.html)
                ### Amazon S3
                - [S3 Bi-Directional Replication](https://wellarchitectedlabs.com/reliability/200_labs/200_bidirectional_replication_for_s3/)
                ### Amazon CloudFront
                - [Blog: Using Amazon CloudFront and Amazon S3 to build multi-Region active-active geo proximity applications](https://aws.amazon.com/fr/blogs/networking-and-content-delivery/using-amazon-cloudfront-and-amazon-s3-to-build-multi-region-active-active-geo-proximity-applications/)
                - [DR Workshop: CloudFront - Origin Group](https://disaster-recovery.workshop.aws/en/labs/basics/cloudfront.html)
            - name: Configuring load balancing to support cross-AZ services
              content: |
                ### Classic Load Balancer
                - [Configure cross-zone load balancing for your **Classic Load Balancer**](https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html)
                ### Application Load Balancer
                - [How Elastic Load Balancing works | Cross-zone load balancing](https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/how-elastic-load-balancing-works.html#cross-zone-load-balancing)
            - name: "Configuring applications and related services to support multiple Availability Zones and Regions while minimizing downtime"
              content: |
                ### Route 53
                - [Guidance for Cross Region Failover and Graceful Failback on AWS](https://d1.awsstatic.com/solutions/guidance/architecture-diagrams/cross-region-failover-and-graceful-failback-on-aws.pdf)
                - [DR Workshop: API Gateway - Failover for Private APIs](https://disaster-recovery.workshop.aws/en/labs/advanced/api-gateway.html)
        - id: "3.2"
          name: Implement solutions that are scalable to meet business requirements.
          knowledgeOf:
            - name: "Appropriate metrics for scaling services"
              content: |
                ### Auto Scaling
                - [Amazon CloudWatch metrics for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-metrics.html)
                - [Advanced predictive scaling policy configurations using custom metrics](https://docs.aws.amazon.com/autoscaling/ec2/userguide/predictive-scaling-customized-metric-specification.html)
            - name: "Loosely coupled and distributed architectures"
              content: |
                ### Loosely Coupled
                #### AWS Well-Architected Framework
                - [High Performance Computing Lens: Loosely Coupled Scenarios](https://docs.aws.amazon.com/wellarchitected/latest/high-performance-computing-lens/loosely-coupled-scenarios.html)
                - [Queue-Based Architecture](https://docs.aws.amazon.com/wellarchitected/latest/high-performance-computing-lens/queue-based-architecture.html)
                - [REL04-BP02 Implement loosely coupled dependencies](https://docs.aws.amazon.com/wellarchitected/latest/framework/rel_prevent_interaction_failure_loosely_coupled_system.html)
                ### Distributed architectures
                - [Challenges with distributed systems](https://aws.amazon.com/builders-library/challenges-with-distributed-systems/?nc1=h_ls)
                - [Distributed systems components](https://docs.aws.amazon.com/whitepapers/latest/microservices-on-aws/distributed-systems-components.html)
            - name: "Serverless architectures"
              content: |
                ### AWS Well-Architected Framework
                - [Serverless Applications Lens: Scenarios](https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/restful-microservices.html)
                - [High Performance Computing Lens: Serverless](https://docs.aws.amazon.com/wellarchitected/latest/high-performance-computing-lens/serverless.html)
            - name: "Container platforms"
              content: |
                ### Comparison
                - [What Are the Differences Between Elastic Beanstalk, EKS, ECS, EC2, Lambda, and Fargate?](https://www.logicmonitor.com/blog/what-are-the-differences-between-elastic-beanstalk-eks-ecs-ec2-lambda-and-fargate)
                - [Choosing your container environment on AWS with Lightsail, ECS, EKS, Lambda, and Fargate](https://nathanpeck.com/choosing-container-environment-on-aws-lightsail-ecs-eks-lambda-fargate/)
                ### What is ?
                - [What is Amazon EKS?](https://docs.aws.amazon.com/eks/latest/userguide/what-is-eks.html)
                - [What is Amazon Elastic Container Service?](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/Welcome.html)
                - [What is AWS Lambda?](https://docs.aws.amazon.com/lambda/latest/dg/welcome.html)
                - [What is AWS Elastic Beanstalk?](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/Welcome.html)
                ### AWS Copilot
                - [AWS Copilot CLI](https://aws.github.io/copilot-cli/)
                - [Getting started with Amazon ECS using AWS Copilot](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/getting-started-aws-copilot-cli.html)
                - [Introducing AWS Copilot](https://aws.amazon.com/fr/blogs/containers/introducing-aws-copilot/)
                - [Automatically deploying your container application with AWS Copilot](https://aws.amazon.com/fr/blogs/containers/automatically-deploying-your-container-application-with-aws-copilot/)
                ```shell
                copilot pipeline init # Generate pipeline manifest
                copilot pipeline update # Deploy the pipeline
                copilot pipeline status # Monitor the pipeline
                ```
                ### AWS App2Container
                - [What is AWS App2Container?](https://docs.aws.amazon.com/app2container/latest/UserGuide/what-is-a2c.html)
                  - Utility to generate images on ECR from live running environment and deploy them to ECS, EKS, AppRunner. Can generate CodePipeline pipeline. But not Elastic Beanstalk.
                ### Elastic Beanstalk
                - [Deploying Elastic Beanstalk applications from Docker containers](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_docker.html)
                - [Customizing software on Linux servers](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customize-containers-ec2.html)
                - [Design considerations](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.concepts.design.html)
                - [Precedence](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html#configuration-options-precedence)
                - [Customizing software on Linux servers](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customize-containers-ec2.html)
                  - command on a single machine (in cluster) : container_commands: leader_only:true
                  - [What is the difference between commands and container_commands configuration keys in Beanstalk?](https://stackoverflow.com/questions/35788499/what-is-the-difference-between-commands-and-container-commands-configuration-key/40096352#40096352)
          skillsIn:
            - name: "Identifying and remediating scaling issues"
              content: |
                ### TroubleShooting
                - [ASG_UserGuide: Troubleshoot Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/codedeploy/latest/userguide/troubleshooting-auto-scaling.html)
                - [CodeDeploy_UserGuide: Troubleshoot Amazon EC2 Auto Scaling issues](https://docs.aws.amazon.com/codedeploy/latest/userguide/troubleshooting-auto-scaling.html)
                - [Blog: How do I troubleshoot scaling issues with my Amazon EC2 Auto Scaling group?](https://repost.aws/knowledge-center/auto-scaling-troubleshooting)
                ### Auto Scaling actions
                - [ASG_UserGuide: Control which Auto Scaling instances terminate during scale in](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html)
                - [ASG_UserGuide: Enter and exit standby](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-lifecycle.html#as-lifecycle-standby)
                - [ASG_UserGuide: Temporarily remove instances from your Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-enter-exit-standby.html)
                - [ASG_UserGuide: Suspend and resume a process for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-suspend-resume-processes.html)
                ### LifeCycle Hooks
                - [Amazon EC2 Auto Scaling lifecycle hooks](https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html)
                  - E.g.
                    - When a scale-out event occurs, your newly launched instance completes its startup sequence and transitions to a wait state. While the instance is in a wait state, it runs a script to download and install the needed software packages for your application, making sure that your instance is fully ready before it starts receiving traffic. When the script is finished installing software, it sends the complete-lifecycle-action command to continue. (state=Pending:Wait)
                    - When a scale-in event occurs, a lifecycle hook pauses the instance before it is terminated and sends you a notification using Amazon EventBridge. While the instance is in the wait state, you can invoke an AWS Lambda function or connect to the instance to download logs or other data before the instance is fully terminated. (state=Terminating:Wait)
            - name: "Identifying and implementing appropriate auto scaling, load balancing, and caching solutions"
              content: |
                ### Auto Scaling
                - [Amazon EC2 Auto Scaling lifecycle hooks](https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html)
                - [Worshop: Ec2 Spot Instances](https://ec2spotworkshops.com/)
                #### Target tracking
                - [Target tracking scaling policies for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-target-tracking.html)
                #### Schedules Scaling
                - [Scheduled scaling for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-scheduled-scaling.html)
            - name: "Deploying container-based applications (e.g, Amazon ECS, Amazon EKS)"
              content: |
                ### Workshop
                - [Amazon ECS Workshop](https://ecsworkshop.com/)
                - [AWS Elastic Kubernetes Service (EKS) workshop](https://www.eksworkshop.com/docs/introduction/)
            - name: "Deploying workloads in multiple AWS Regions for global scalability"
              content: |
                ### Articles
                - [Blog: Creating a Multi-Region Application with AWS Services â€“ Part 1, Compute, Networking, and Security](https://aws.amazon.com/blogs/architecture/creating-a-multi-region-application-with-aws-services-part-1-compute-and-security/)
                - [Medium: How to Design a Highly Available, Scalable & Secured AWS 3-tier Application for Multi-region?](https://medium.com/@azizulmaqsud/how-to-design-a-highly-available-scalable-secured-aws-3-tier-application-for-multi-region-%EF%B8%8F-b1e2032ea22c)
            - name: "Configuring serverless applications (e.g, Amazon API Gateway, Lambda, AWS Fargate)"
              content: |
                - [Build a CRUD Serverless API from scratch using AWS Lambda (Python), API Gateway, and DynamoDB](https://dev.to/aws-builders/build-a-crud-serverless-api-from-scratch-using-aws-lambda-api-gateway-and-dynamodb-1ia4)
                - [Field Notes: Serverless Container-based APIs with Amazon ECS and Amazon API Gateway](https://aws.amazon.com/blogs/architecture/field-notes-serverless-container-based-apis-with-amazon-ecs-and-amazon-api-gateway/)
                - [EDA using Amazon EventBridge, Lambda, and Fargate ECS, with SAM-CLI and a Native Spring Boot MS as Event Source](https://aosolorzano.medium.com/eda-with-eventbridge-and-lambda-using-sam-cli-with-spring-boot-ms-on-fargate-ecs-as-event-source-9abee237be08)
        - id: "3.3"
          name: Implement automated recovery processes to meet RTO/RPO requirements.
          knowledgeOf:
            - name: "Disaster recovery concepts (e.g, RTO, RPO)"
              content: |
                ### AWS Well-Architected Framework
                - [Reliability Pillar:Plan for Disaster Recovery (DR)](https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/plan-for-disaster-recovery-dr.html)
                ### Definition of objectives
                - [__Recovery Time Objective (RTO)__](https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/disaster-recovery-dr-objectives.html)
                  - Defined by the organization. RTO is the maximum acceptable delay between the interruption of service and restoration of service. This determines what is considered an acceptable time window when service is unavailable.
                - [__Recovery Point Objective (RPO)__](https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/disaster-recovery-dr-objectives.html)
                  - Defined by the organization. RPO is the maximum acceptable amount of time since the last data recovery point. This determines what is considered an acceptable loss of data between the last recovery point and the interruption of service.
                - [__Availability__](https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/availability.html)
                  - is the percentage of time that a workload is available for use. 
                - [__Resiliency__](https://docs.aws.amazon.com/wellarchitected/latest/reliability-pillar/resiliency-and-the-components-of-reliability.html)
                  -  is the ability of a workload to recover from infrastructure or service disruptions, dynamically acquire computing resources to meet demand, and mitigate disruptions, such as misconfigurations or transient network issues.
            - name: "Backup and recovery strategies (e.g, pilot light, warm standby)"
              content: |
                ### Principles
                - [AWS Well-Architected Framework: Disaster recovery options in the cloud](https://docs.aws.amazon.com/whitepapers/latest/disaster-recovery-workloads-on-aws/disaster-recovery-options-in-the-cloud.html)
                ### AWS Architecture Blog
                - [Blog: Disaster Recovery (DR) Architecture on AWS, Part I: Strategies for Recovery in the Cloud](https://aws.amazon.com/blogs/architecture/disaster-recovery-dr-architecture-on-aws-part-i-strategies-for-recovery-in-the-cloud/)
                - [Blog: Disaster Recovery (DR) Architecture on AWS, Part II: Backup and Restore with Rapid Recovery](https://aws.amazon.com/blogs/architecture/disaster-recovery-dr-architecture-on-aws-part-ii-backup-and-restore-with-rapid-recovery/)
                - [Blog: Disaster Recovery (DR) Architecture on AWS, Part III: Pilot Light and Warm Standby](https://aws.amazon.com/blogs/architecture/disaster-recovery-dr-architecture-on-aws-part-iii-pilot-light-and-warm-standby/)
                - [Blog: Disaster Recovery (DR) Architecture on AWS, Part IV: Multi-site Active/Active](https://aws.amazon.com/blogs/architecture/disaster-recovery-dr-architecture-on-aws-part-iv-multi-site-active-active/)
                ### Workshop
                - [Plan for Disaster Recovery (DR)](https://catalog.us-east-1.prod.workshops.aws/workshops/6b7a41c6-3cae-45f2-bf2c-72c64b55d920/en-US)
            - name: "Recovery procedures"
              content: |
                ### AWS Well-Architected Framework
                - [Disaster Recovery of Workloads on AWS: Recovery in the Cloud](https://docs.aws.amazon.com/whitepapers/latest/disaster-recovery-workloads-on-aws/disaster-recovery-options-in-the-cloud.html)
                ### Disaster Recovery FAQ
                - [What are the best disaster recovery methods?](https://aws.amazon.com/what-is/disaster-recovery/#seo-faq-pairs#what-are-the-best-disaster-recovery-methods)
                ### Availability zone evacuation pattern
                - [AWS Whitepapers](https://docs.aws.amazon.com/whitepapers/latest/advanced-multi-az-resilience-patterns/control-plane-controlled-evacuation.html)
          skillsIn:
            - name: "Testing failover of Multi-AZ/multi-Region workloads (e.g, Amazon RDS, Amazon Aurora, Route 53, CloudFront)"
              content: |
                ### Amazon RDS
                - Reboot with failover
                  - [AWS Well-Architected Labs: RDS Failure Injection](https://www.wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/5_failure_injection_rds/)
                  - [AWS RDS MySQL on Multi-AZ Test Failover](https://tungle.ca/?p=3677)
                  ```
                  aws rds reboot-db-instance \
                    --region us-east-1 \
                    --profile my_aws_profile_name_here \
                    --db-instance-identifier my_rds_db_identifier_here \
                    --force-failover
                  ```
                ### Amazon Aurora
                - [Testing Amazon Aurora MySQL using fault injection queries](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Managing.FaultInjectionQueries.html)
                - [Doing failover in Amazon Aurora Read Replica with the highest priority](https://dev.to/aws-builders/doing-failover-in-amazon-aurora-read-replica-with-the-highest-priority-4okb)
                - [How can I perform a failover in my Aurora global database, and why did my failover fail?](https://repost.aws/knowledge-center/aurora-postgresql-failover-issues)
                - [DR WorkShop: Fail Over at Aurora Global Database](https://disaster-recovery.workshop.aws/en/labs/advanced/aurora-global-database/failover.html)
                - [Blog: Deploy multi-Region Amazon Aurora applications with a failover blueprint](https://aws.amazon.com/blogs/database/deploy-multi-region-amazon-aurora-applications-with-a-failover-blueprint/)                
                ### Route 53
                - [DNS Failover with Route53](https://medium.com/tysonworks/dns-failover-with-route53-cc3427a3629a)
                - [Amazon Route 53: Health Checks and DNS Failover](https://www.stormit.cloud/blog/route-53-health-check/)

                ### CloudFront
                - [Optimizing high availability with CloudFront origin failover](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/high_availability_origin_failover.html)
            - name: "Identifying and implementing appropriate cross-Region backup and recovery strategies (e.g, AWS Backup, Amazon S3, Systems Manager)"
              content: |
                ### AWS Backup
                - [AWS Backup: Creating backup copies across AWS Regions](https://docs.aws.amazon.com/aws-backup/latest/devguide/cross-region-backup.html)                
                - [Blog: Secure data recovery with cross-account backup and Cross-Region copy using AWS Backup](https://aws.amazon.com/blogs/storage/secure-data-recovery-with-cross-account-backup-and-cross-region-copy-using-aws-backup/)
                ### Amazon S3
                - [S3 Backup Strategy and How configure Cross Region Replication.](https://medium.com/@ajay20kin/s3-backup-strategy-and-how-configure-cross-region-replication-dd5f1e3b8b63)
                - [Workshop](https://www.wellarchitectedlabs.com/reliability/disaster-recovery/workshop_1/2-s3-crr/)
                ### Systems Manager
                - [Create an AMI and cross-Region copy](https://docs.aws.amazon.com/systems-manager/latest/userguide/automation-document-backup-maintenance-example.html)
            - name: "Configuring a load balancer to recover from backend failure"
              content: |
                ### Application Load Balancer
                - [Health checks for your target groups](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/target-group-health-checks.html)
                - [Cross-zone load balancing for target groups](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/disable-cross-zone.html)
                - [Target group health](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/target-group-health.html)
                ### Classic Load Balancer
                - [Configure health checks for your Classic Load Balancer](https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-healthchecks.html)
    - id: "4"
      name: "Monitoring and Logging (15%)"
      taskStatements:
        - id: "4.1"
          name: Configure the collection, aggregation, and storage of logs and metrics.
          knowledgeOf:
            - name: "How to monitor applications and infrastructure"
              content: |
                ### CloudWatch
                - [What is Amazon CloudWatch?](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/WhatIsCloudWatch.html)
                - [Application monitoring](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Application-Monitoring-Sections.html)
                ### AWS Health
                - [What is AWS Health?](https://docs.aws.amazon.com/health/latest/ug/what-is-aws-health.html)
                - [Getting started with your AWS Health Dashboard â€“ Your account health](https://docs.aws.amazon.com/health/latest/ug/getting-started-health-dashboard.html)
                - [Logging and monitoring in AWS Health](https://docs.aws.amazon.com/health/latest/ug/monitoring-overview.html)
            - name: "Amazon CloudWatch metrics (e.g, namespaces, metrics, dimensions, and resolution)"
              content: |
                ### CloudWatch
                - [Amazon CloudWatch concepts](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html)
            - name: "Real-time log ingestion"
              content: |
                ### CloudWatch
                - [Real-time processing of log data with subscriptions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Subscriptions.html)
                - [Streaming CloudWatch Logs data to Amazon OpenSearch Service](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_OpenSearch_Stream.html)
                ### Amazon OpenSearch Service
                - [Loading streaming data from Amazon CloudWatch](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/integrations.html#integrations-cloudwatch)
                ### Kinesis Firehose
                - [CloudWatch Logs vs. Kinesis Firehose](https://medium.com/circuitpeople/cloudwatch-logs-vs-kinesis-firehose-71fc3fd54f8c)
                ### Kinesis Stream
                - [AWS â€” Sending real-time CloudWatch log events to Kinesis stream](https://awstip.com/aws-sending-real-time-cloudwatch-log-events-to-kinesis-stream-f80e09341bd2)
            - name: "Encryption options for at-rest and in-transit logs and metrics (e.g, client-side and server-side, AWS Key Management Service [AWS KMS])"
              content: |
                ### AWS WhitePaper
                - [Encrypting Data-at-Rest and Data-in-Transit](https://docs.aws.amazon.com/whitepapers/latest/logical-separation/encrypting-data-at-rest-and--in-transit.html)
                ### Blog
                - [Medium: Data Encryption at Rest & Transit on AWS](https://hetakshi-patil.medium.com/data-encryption-at-rest-transit-on-aws-38a6a9140004)
                - [How to Enable End-to-End Encryption in AWS](https://www.infracloud.io/blogs/enable-end-to-end-encryption-aws/)
                ### App Flow
                - [What is Amazon AppFlow?](https://docs.aws.amazon.com/appflow/latest/userguide/what-is-appflow.html)
                - [SAP OData connector for Amazon AppFlow](https://docs.aws.amazon.com/appflow/latest/userguide/sapodata.htmls)
            - name: "Security configurations (e.g, IAM roles and permissions to allow for log collection)"
              content: |
                ### AWS CloudWatch
                - [Using identity-based policies (IAM policies) for CloudWatch Logs](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/iam-identity-based-access-control-cwl.html)
          skillsIn:
            - name: "Securely storing and managing logs"
              content: |
                ### S3
                - [Managing your storage lifecycle](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html)
                ### Solutions for Cloud Foundation
                - [Guidance for Log Storage on AWS](https://aws.amazon.com/solutions/guidance/log-storage-on-aws/)
                  - Log storage must be tamper-resistant and encrypted, and accessed only by controlled and monitored mechanisms, based on least privilege access by role.
                #### Build a secure and resilient log storage
                - Secure access to log storage
                - Configure default encryption on log storage
                - Create a place to store your logs
                #### Store logs centrally
                - Capture audit trails logs in central location
                - Capture resource configuration changes in a central location
                - Generate logs at an organization-defined frequency
                #### Ensuring the integrity of logs within your log storage
                - Set preventive controls to prevent unauthorized access and modification of the logs
                - Generate and store access logs to your log storage
                #### Managing your logs in your log storage
                - Create a policy document that specifies the length of time logs must be kept
                - Automate log rotation and archiving to the proper storage tier (frequently access to archival)
                - Define time period to retain regular access to logs or to rotate to the archive
                - Establish a process exception mechanism when log deletion or archiving may be required
                #### Adding new logs into the log storage
                - Define a process to add new logs to the log storage
                - Build a mechanism to store new logs into the log storage
                - Automate the addition of new logs to your log storage
                #### Granting access to the logs
                - Grant read-only accesses by role/user using the Principle of Least Privilege (PoLP)
                - Provide read access to the logs in order to perform analysis or an audit (internal/external)
                - Automate temporary read-only access to specific log in the log storage by owner or use case
            - name: "Creating CloudWatch metrics from log events by using metric filters"
              content: |
                ### CloudWatch Logs
                - [Creating metrics from log events using filters](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/MonitoringLogData.html)
                - [Filter pattern syntax for metric filters, subscription filters, and filter log events](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html)
            - name: "Creating CloudWatch metric streams (e.g, Amazon S3 or Amazon Kinesis Data Firehose options)"
              content: |
                ### AWS Solutions Library
                - [DevOps Monitoring Dashboard on AWS](https://aws.amazon.com/solutions/implementations/devops-monitoring-dashboard-on-aws/?did=sl_card&trk=sl_card)
                - [Ingesting, analyzing, and visualizing metrics with DevOps Monitoring Dashboard on AWS](https://docs.aws.amazon.com/solutions/latest/devops-monitoring-dashboard-on-aws/solution-overview.html)
            - name: "Collecting custom metrics (e.g, using the CloudWatch agent)"
              content: |
                ### CloudWatch
                - [Publish custom metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html)
                - [Collect metrics, logs, and traces from Amazon EC2 instances and on-premises servers with the CloudWatch agent](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Install-CloudWatch-Agent.html)
                - [Metrics collected by the CloudWatch agent](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/metrics-collected-by-CloudWatch-agent.html)
                - [Start the CloudWatch Logs agent](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/StartTheCWLAgent.html)
            - name: "Managing log storage lifecycles (e.g, S3 lifecycles, CloudWatch log group retention)"
              content: |
                ### S3
                - [Managing your storage lifecycle](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html)
                ### Cloudwatch logs
                - [Altering CloudWatch log retention](https://docs.aws.amazon.com/managedservices/latest/userguide/log-customize-retention.html)
            - name: "Processing log data by using CloudWatch log subscriptions (e.g, Kinesis, Lambda, Amazon OpenSearch Service)"
              content: |
                ### Cloudwatch logs
                - [Real-time processing of log data with subscriptions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/Subscriptions.html)
                - [Cross-account log data sharing with subscriptions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CrossAccountSubscriptions.html)
                  - Kinesis streams are currently the only resource supported as a destination for cross-account subscriptions.
            - name: "Searching log data by using filter and pattern syntax or CloudWatch Logs Insights"
              content: |
                ### Amazon CloudWatch Logs
                - [Analyzing log data with CloudWatch Logs Insights](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AnalyzingLogData.html)
            - name: "Configuring encryption of log data (e.g, AWS KMS)"
              content: |
                ### Amazon CloudWatch Logs
                - [Encrypt log data in CloudWatch Logs using AWS Key Management Service](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)
        - id: "4.2"
          name: Audit, monitor, and analyze logs and metrics to detect issues.
          knowledgeOf:
            - name: "Anomaly detection alarms (e.g, CloudWatch anomaly detection)"
              content: |
                ### Amazon CloudWatch Logs
                - [Using CloudWatch anomaly detection](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Anomaly_Detection.html)
                - [WorkShop](https://catalog.workshops.aws/observability/en-US/aws-native/metrics/anomalydetection)
            - name: "Common CloudWatch metrics and logs (e.g, CPU utilization with Amazon EC2, queue length with Amazon RDS, 5xx errors with an Application Load Balancer)"
              content: |
                ### CloudWatch
                - [List the available CloudWatch metrics for your instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/viewing_metrics_with_cloudwatch.html)
                ### RDS
                - [Amazon CloudWatch metrics for Amazon RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-metrics.html)
                ### Application Load Balancer
                - [CloudWatch metrics for your Application Load Balancer](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-cloudwatch-metrics.html)
            - name: "Amazon Inspector and common assessment templates"
              content: |
                ### Amazon Inspector
                - [What is Amazon Inspector?](https://docs.aws.amazon.com/inspector/latest/user/what-is-inspector.html)
                #### Legacy reports in Amazon Inspector Classic
                - [Amazon Inspector Classic assessment templates and assessment runs](https://docs.aws.amazon.com/inspector/v1/userguide/inspector_assessments.html)
                #### Reports in new Amazon Inspector
                - [Understanding findings in Amazon Inspector](https://docs.aws.amazon.com/inspector/latest/user/findings-understanding.html)
            - name: "AWS Config rules"
              content: |
                ### AWS Config
                - [Evaluating Resources with AWS Config Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html)
                - Rules:
                  - [cloudtrail-enabled](https://docs.aws.amazon.com/config/latest/developerguide/cloudtrail-enabled.html)
                  - [cloudtrail-security-trail-enabled](https://docs.aws.amazon.com/config/latest/developerguide/cloudtrail-security-trail-enabled.html)
                - [Multi-Account Multi-Region Data Aggregation](https://docs.aws.amazon.com/config/latest/developerguide/aggregate-data.html)
                #### AWS DevOps Blog
                - [AWS Config: Checking for Compliance with New Managed Rule Options](https://aws.amazon.com/blogs/devops/aws-config-checking-for-compliance-with-new-managed-rule-options/)
                  - strong_password_policy â€“ Checks that we have a Strong Password policy for AWS IAM Users
                  - only_encrypted_volumes â€“ Checks that all attached EBS volumes are encrypted
                  - approved_ami_by_id â€“ Checks that approved AMI IDs have been used
                  - approved_ami_by_tag â€“ Check that AMIs tagged as sec_approved have been used
                  - ec2_required_tags â€“ Check that all required tags have been applied to EC2 instances
            - name: "AWS CloudTrail log events"
              content: |
                ### CloudTrail
                - [Security best practices in AWS CloudTrail](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/best-practices-security.html)
                - [CloudTrail log event reference](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-event-reference.html)
                - [CloudTrail log file examples](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-log-file-examples.html)
                - [Sending events to CloudWatch Logs](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/send-cloudtrail-events-to-cloudwatch-logs.html)
          skillsIn:
            - name: "Building CloudWatch dashboards and Amazon QuickSight visualizations"
              content: |
                ### CloudWatch Dashboard
                - [Using Amazon CloudWatch dashboards](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Dashboards.html)
                - [Creating Dashboards](https://catalog.us-east-1.prod.workshops.aws/workshops/a8e9c6a6-0ba9-48a7-a90d-378a440ab8ba/en-US/300-cloudwatch/340-cloudwatch-dashboards/341-cloudwatch-dashboard)
                ### Amazon QuickSight
                - [What is Amazon QuickSight?](https://docs.aws.amazon.com/quicksight/latest/user/welcome.html)
            - name: "Associating CloudWatch alarms with CloudWatch metrics (standard and custom)"
              content: |
                ### Amazon Cloudwatch
                - [Using Amazon CloudWatch alarms](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Alarm-On-Metrics.html)
                  - metric alarm (single metric based)
                  - composite alarm (based on several other alarms)
                #### Targets for Cloudwatch Alarms
                - [Notifying users on alarm changes](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Notify_Users_Alarm_Changes.html)
                  - [Setting up AWS User Notifications](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Notify_Users_Alarm_Changes.html#Alarm_User_Notifications)
                  - [Setting up Amazon SNS notifications](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Notify_Users_Alarm_Changes.html#US_SetupSNS)
            - name: "Configuring AWS X-Ray for different services (e.g, containers, API Gateway, Lambda)"
              content: |
                ### AWS X-Ray
                - [What is AWS X-Ray?](https://docs.aws.amazon.com/xray/latest/devguide/aws-xray.html)
                ### AWS X-Ray daemon
                - [AWS X-Ray daemon](https://docs.aws.amazon.com/xray/latest/devguide/xray-daemon.html)
                - [Running the X-Ray daemon on AWS Elastic Beanstalk](https://docs.aws.amazon.com/xray/latest/devguide/xray-daemon-beanstalk.html)
                - [Running the X-Ray daemon on Amazon EC2](https://docs.aws.amazon.com/xray/latest/devguide/xray-daemon-ec2.html)
                - [Running the X-Ray daemon on Amazon ECS](https://docs.aws.amazon.com/xray/latest/devguide/xray-daemon-ecs.html)
                  - Allows the application to send segments to daemon in sidecar container, network can be:
                    - Bridge (with links declaration)
                    - AwsVpc (Fargate, all containers in same task definition will have the same ENI)
                ### Workshop
                - [X-Ray traces](https://catalog.workshops.aws/observability/en-US/aws-native/xray)
            - name: "Analyzing real-time log streams (e.g, using Kinesis Data Streams)"
              content: |
                ### Kinesis
                - [Blog: Practical Guide to Unified Log Processing with Amazon Kinesis](https://www.apriorit.com/dev-blog/cloud-unified-log-processing-with-amazon-kinesis)
            - name: "Analyzing logs with AWS services (e.g, Amazon Athena, CloudWatch Logs Insights)"
              content: |
                ### Athena
                - [Querying AWS service logs](https://docs.aws.amazon.com/athena/latest/ug/querying-aws-service-logs.html)
                ### CloudWatch Logs Insights
                - [Analyzing log data with CloudWatch Logs Insights](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AnalyzingLogData.html)
                - [Workshop](https://catalog.workshops.aws/observability/en-US/aws-native/logs/logsinsights)
        - id: "4.3"
          name: "Automate monitoring and event management of complex environments."
          knowledgeOf:
            - name: "Event-driven, asynchronous design patterns (e.g, S3 Event Notifications or Amazon EventBridge events to SNS or Lambda)"
              content: |
                ### S3
                - [Amazon S3 Event Notifications](https://docs.aws.amazon.com/AmazonS3/latest/userguide/EventNotifications.html)
                ### Event Bridge
                - [EventBridge is the evolution of Amazon CloudWatch Events](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-cwe-now-eb.html)
                - [What Is Amazon EventBridge?](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-what-is.html)
                  - [Amazon EventBridge Event Bus](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-bus.html)
                  - [Amazon EventBridge Pipes](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes.html)
                  - [Receiving events from a SaaS partner with Amazon EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-saas.html)
                ### Workshop
                - [Building event-driven architectures on AWS](https://catalog.us-east-1.prod.workshops.aws/workshops/63320e83-6abc-493d-83d8-f822584fb3cb/en-US)
            - name: "Capabilities of auto scaling a variety of AWS services (e.g, EC2 Auto Scaling groups, RDS storage auto scaling, DynamoDB, ECS capacity provider, EKS autoscalers)"
              content: |
                ### EC2 Auto Scaling
                - [What is Amazon EC2 Auto Scaling?](https://docs.aws.amazon.com/autoscaling/ec2/userguide/what-is-amazon-ec2-auto-scaling.html)
                - [Amazon EC2 Auto Scaling Cheat sheet](https://digitalcloud.training/amazon-ec2-auto-scaling/)
                ### RDS Auto Scaling
                - [Managing capacity automatically with Amazon RDS storage autoscaling](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PIOPS.StorageTypes.html#USER_PIOPS.Autoscaling)
                ### DynamoDB
                - [Managing throughput capacity automatically with DynamoDB auto scaling](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/AutoScaling.html)
                  - Adjust read write capacity units based on CloudWatch capacity unit metric
                ### ECS
                - [Amazon ECS capacity providers](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-capacity-providers.html)
                ### EKS
                - [AutoScaling](https://docs.aws.amazon.com/eks/latest/userguide/autoscaling.html)
                - [Cluster Autoscaler on AWS](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/cloudprovider/aws/README.md)
            - name: "Alert notification and action capabilities (e.g, CloudWatch alarms to Amazon SNS, Lambda, EC2 automatic recovery)"
              content: |
                ### CloudWatch
                - [Alarm actions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-actions)
                - [Create alarms to stop, terminate, reboot, or recover an EC2 instance](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/UsingAlarmActions.html)
                - [Step and simple scaling policies for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html)
                - [Configure CloudWatch alarms to create OpsItems](https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-create-OpsItems-from-CloudWatch-Alarms.html)
                ### Lambda
                - [Event-driven with Lambda](https://catalog.us-east-1.prod.workshops.aws/workshops/63320e83-6abc-493d-83d8-f822584fb3cb/en-US/lambda)
                ### EC2 
                - [Recover your instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recover.html)
            - name: "Health check capabilities in AWS services (e.g, Application Load Balancer target groups, Route 53)"
              content: |
                ### Buider's library
                - [Implementing health checks](https://d1.awsstatic.com/builderslibrary/pdfs/implementing-health-checks.pdf)
                ### Load balancer
                - [Health checks for your target groups](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/target-group-health-checks.html)
                - [Target group health](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/target-group-health.html)
                - [Add Elastic Load Balancing health checks to an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-add-elb-healthcheck.html)
                ### Route 53
                - [Creating Amazon Route 53 health checks and configuring DNS failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html)
                  - Health checks that monitor an endpoint
                  - Health checks that monitor other health checks (calculated health checks)
                  - Health checks that monitor CloudWatch alarms
                  - Amazon Route 53 Application Recovery Controller
          skillsIn:
            - name: "Configuring solutions for auto scaling (e.g, DynamoDB, EC2 Auto Scaling groups, RDS storage auto scaling, ECS capacity provider)"
              content: |
                ### DynamoDB
                - [Workshop](https://amazon-dynamodb-labs.com/design-patterns/ex1capacity/step7.html)
                ### Ec2 Auto Scaling
                - [Using Dynamic Scaling in Asg](https://ec2spotworkshops.com/ec2-auto-scaling-with-multiple-instance-types-and-purchase-options/scale_dynamic.html)
                ### RDS storage auto scaling
                - [Enable RDS Storage Auto Scaling instead of over-provisioning storage capacity](https://catalog.us-east-1.prod.workshops.aws/workshops/f238037c-8f0b-446e-9c15-ebcc4908901a/en-US/002-services/001-databases/002-rds)
                - [AWS RDS Fundamentals](https://blog.clairvoyantsoft.com/aws-rds-fundamentals-4e4874649912#859f)
                ### ECS Capacity Provider
                - [ECS WorkShop](https://ecsworkshop.com/capacity_providers/)
            - name: "Creating CloudWatch custom metrics and metric filters, alarms, and notifications (e.g, Amazon SNS, Lambda)"
              content: |
                ### Lambda
                - [Lambda:Custom metrics](https://docs.aws.amazon.com/lambda/latest/operatorguide/custom-metrics.html)
                ### CloudWatch
                - [Publish custom Metrics](https://catalog.workshops.aws/observability/en-US/aws-native/metrics/publishmetrics)
                - [Creating metric filters](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/MonitoringPolicyExamples.html)
            - name: "Configuring S3 events to process log files (e.g, by using Lambda), and deliver log files to another destination (e.g, OpenSearch Service, CloudWatch Logs)"
              content: |
                ### S3 Events
                - [S3 Events: Unlocking your Imagination](https://www.bitslovers.com/s3-events-with-event-bus-routing-and-filtering/)
                - [How to set up event-based ingestion of files in S3 for free](https://www.tinybird.co/blog-posts/how-to-set-up-event-based-ingestion-of-files-in-s3-for-free)
                ### OpenSearch Service
                - [What is Amazon OpenSearch Service?](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/what-is.html)
                - [OpenSearch Ingestion pipeline](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/configure-client-s3.html)
                ### Lambda CloudWatch
                - [Tutorial: Using an Amazon S3 trigger to invoke a Lambda function](https://docs.aws.amazon.com/lambda/latest/dg/with-s3-example.html)
            - name: "Configuring EventBridge to send notifications based on a particular event pattern"
              content: |
                ### Amazon EventBridge
                - [Amazon EventBridge event patterns](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns.html)
                - [Amazon EventBridge rules](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-rules.html)
                - [Amazon EventBridge targets](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-targets.html)
            - name: "Installing and configuring agents on EC2 instances (e.g, AWS Systems Manager Agent [SSM Agent], CloudWatch agent)"
              content: |
                ### Systems Manager
                - [Working with SSM Agent](https://docs.aws.amazon.com/systems-manager/latest/userguide/ssm-agent.html)
                - [How do I install SSM Agent on an Amazon EC2 Linux instance at launch?](https://repost.aws/knowledge-center/install-ssm-agent-ec2-linux)
                - [AmazonSSMManagedInstanceCore](https://docs.aws.amazon.com/aws-managed-policy/latest/reference/AmazonSSMManagedInstanceCore.html)
                ### CloudWatch Agent
                - [Installing the CloudWatch agent](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/install-CloudWatch-Agent-on-EC2-Instance.html)
            - name: "Configuring AWS Config rules to remediate issues"
              content: |
                ### AWS Config
                - [Workshop: Config Rule with Remediation](https://mng.workshop.aws/config.html)
                - [Workshop: Config Rule with Lambda](https://mng.workshop.aws/config/configrule-with-lambda.html)
            - name: "Configuring health checks (e.g, Route 53, Application Load Balancer)"
              content: |
                ### Load Balancer
                - [Health checks for your target groups](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/target-group-health-checks.html)
                ### Route53
                - [Creating, updating, and deleting health checks](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/health-checks-creating-deleting.html)               
    - id: "5"
      name: "Incident and Event Response (14%)"
      taskStatements:
        - id: "5.1"
          name: "Manage event sources to process, notify, and take action in response to events."
          knowledgeOf:
            - name: "AWS services that generate, capture, and process events (e.g, AWS Health, EventBridge, CloudTrail, CloudWatch Events)"
              content: |
                ### AWS Health
                - [Concepts for AWS Health](https://docs.aws.amazon.com/health/latest/ug/aws-health-concepts-and-terms.html)
                - [Monitoring AWS Health events with Amazon EventBridge](https://docs.aws.amazon.com/health/latest/ug/cloudwatch-events-health.html)
                ### Event Bridge
                - [AWS Monitoring with EventBridge](https://cloudonaut.io/aws-monitoring-with-eventbridge/)
                - [WorkShop](https://catalog.us-east-1.prod.workshops.aws/workshops/dde4faf0-b40a-467c-b062-6085162d2215/en-US/lab01)
            - name: "Event-driven architectures (e.g, fan out, event streaming, queuing)"
              content: |
                ### Principles
                - [What Is EDA (Event-Driven Architecture)?](https://aws.amazon.com/what-is/eda/)
                - [Best practices for implementing event-driven architectures in your organization](https://aws.amazon.com/blogs/architecture/best-practices-for-implementing-event-driven-architectures-in-your-organization/)
                - [Differences between a message queue and an event stream](https://www.linkedin.com/pulse/differences-between-message-queue-event-stream-frank-lieu/)
          skillsIn:
            - name: "Integrating AWS event sources (e.g, AWS Health, EventBridge, CloudTrail, CloudWatch Events)"
              content: |
                ### AWS Health
                - [Logging AWS Health API calls with AWS CloudTrail](https://docs.aws.amazon.com/health/latest/ug/logging-using-cloudtrail.html)
                - [AWS Health now aggregates Health events in your organization to Amazon EventBridge](https://aws.amazon.com/fr/about-aws/whats-new/2023/10/aws-health-aggregates-events-organization-eventbridge/)
                - [Monitoring AWS Health Events](https://curiousorbit.com/blog/monitoring-aws-health-events/)
                ### CloudTrail
                - [Using AWS Lambda with AWS CloudTrail](https://docs.aws.amazon.com/lambda/latest/dg/with-cloudtrail.html)
                ### SNS
                - [Amazon SNS event sources](https://docs.aws.amazon.com/sns/latest/dg/sns-event-sources.html)
                ### Event Bridge
                - [Monitoring AWS Config with Amazon EventBridge](https://docs.aws.amazon.com/config/latest/developerguide/monitor-config-with-cloudwatchevents.html)
            - name: "Building event processing workflows (e.g, Amazon Simple Queue Service [Amazon SQS], Kinesis, Amazon SNS, Lambda, Step Functions)"
              content: |
                ### Blog
                - [Run event-driven workflows with Amazon EKS and AWS Step Functions](https://aws.amazon.com/fr/blogs/containers/run-event-driven-workflows-with-amazon-eks-and-aws-step-functions/)
                ### Step function
                - [How to Leverage AWS Step Functions to Build an Event-Driven Architecture](https://medium.com/@marco.berlot/how-to-leverage-aws-step-functions-to-build-an-event-driven-architecture-d955cd41be28)
                ### Kinesis
                - [Event sourcing pattern](https://docs.aws.amazon.com/prescriptive-guidance/latest/modernization-data-persistence/service-per-team.html)
                - [How Freebird Scaled Data Processing with AWS Step Functions â€“ Express Workflows](https://aws.amazon.com/fr/blogs/startups/how-freebird-scaled-data-processing-with-aws-step-functions/)
                ### SQS
                - [Orchestrate Queue-based Microservices with AWS Step Functions and Amazon SQS](https://aws.amazon.com/fr/tutorials/orchestrate-microservices-with-message-queues-on-step-functions/)
        - id: "5.2"
          name: "Implement configuration changes in response to events."
          knowledgeOf:
            - name: "Fleet management services (e.g, Systems Manager, AWS Auto Scaling)"
              content: |
                ### Systems manager
                - [What is AWS Systems Manager?](https://docs.aws.amazon.com/systems-manager/latest/userguide/what-is-systems-manager.html)
                - [AWS Systems Manager Fleet Manager](https://docs.aws.amazon.com/systems-manager/latest/userguide/fleet.html)
                ### Auto Scaling
                - [Amazon EC2 Auto Scaling instance lifecycle](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-lifecycle.html)
                - [AWS Auto Scaling Lifecycle](https://jayendrapatil.com/aws-auto-scaling-lifecycle/?utm_content=cmp-true)
            - name: "Configuration management services (e.g, AWS Config)"
              content: |
                ### AWS WhitePaper
                - [[AWS Cloud Adoption Framework] Operations Perspective: Configuration management](https://docs.aws.amazon.com/whitepapers/latest/aws-caf-operations-perspective/configuration-management.html)
                - [[Implementing Microservices on AWS] Configuration management](https://docs.aws.amazon.com/whitepapers/latest/microservices-on-aws/configuration-management.html)
                ### Blog
                - [Centralizing configuration management using AWS Systems Manager](https://aws.amazon.com/fr/blogs/mt/centralizing-configuration-management-using-aws-systems-manager/)
          skillsIn:
            - name: "Applying configuration changes to systems"
              content: |
                ### Systems Manager
                - [AWS Systems Manager Documents](https://docs.aws.amazon.com/systems-manager/latest/userguide/documents.html)
                - [AWS Systems Manager Automation](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-automation.html)
            - name: "Modifying infrastructure configurations in response to events"
              content: |
                ### Blog
                - [Automate continuous compliance at scale in AWS](https://aws.amazon.com/fr/blogs/mt/automate-cloud-foundational-services-for-compliance-in-aws/)
            - name: "Remediating a non-desired system state"
              content: |
                ### AWS Config
                - [Remediating Noncompliant Resources with AWS Config Rules](https://docs.aws.amazon.com/config/latest/developerguide/remediation.html)
        - id: "5.3"
          name: "Troubleshoot system and application failures."
          knowledgeOf:
            - name: "AWS metrics and logging services (e.g, CloudWatch, X-Ray)"
              content: |
                ### CloudWatch Logs
                - [What is Amazon CloudWatch Logs?](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/WhatIsCloudWatchLogs.html)
                - [Common scenarios with the CloudWatch agent](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Agent-common-scenarios.html)
                ### X-Ray
                - [Integrating AWS X-Ray with other AWS services](https://docs.aws.amazon.com/xray/latest/devguide/xray-services.html)
                - [Troubleshooting Amazon Simple Queue Service queues using AWS X-Ray](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-troubleshooting-using-x-ray.html)
                - [[Medium] Real-Time Application Monitoring and Troubleshooting with AWS X-Ray](https://medium.com/@kylejones_47003/real-time-application-monitoring-and-troubleshooting-with-aws-x-ray-2bb99acc1a02)
            - name: "AWS service health services (e.g, AWS Health, CloudWatch, Systems Manager OpsCenter)"
              content: |
                ### Systems Manager OpsCenter
                - [AWS Systems Manager OpsCenter](https://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html)
                - [Learn how to get started with AWS Systems Manager OpsCenter](https://d1.awsstatic.com/events/reinvent/2019/REPEAT_1_Learn_how_to_get_started_with_AWS_Systems_Manager_OpsCenter_MGT412-R1.pdf)
            - name: "Root cause analysis"
              content: |
                ### AWS Well-Architected Framework Glossary
                - [Root cause analysis](https://wa.aws.amazon.com/wat.concept.rca.en.html)
                ### AWS Open Source Blog
                - [Root Cause Analysis with DoWhy, an Open Source Python Library for Causal Machine Learning](https://aws.amazon.com/blogs/opensource/root-cause-analysis-with-dowhy-an-open-source-python-library-for-causal-machine-learning/)
                ### Amazon OpenSearch Service
                - [Root cause analysis](https://aws.amazon.com/opensearch-service/resources/root-cause-analysis/?nc1=h_ls)
          skillsIn:
            - name: "Analyzing failed deployments (e.g, AWS CodePipeline, CodeBuild, CodeDeploy, CloudFormation, CloudWatch synthetic monitoring)"
              content: |
                ### AWS CodePipeline
                - [Troubleshooting CodePipeline](https://docs.aws.amazon.com/codepipeline/latest/userguide/troubleshooting.html)
                - [Monitoring CodePipeline events](https://docs.aws.amazon.com/codepipeline/latest/userguide/detect-state-changes-cloudwatch-events.html)
                ### AWS CodeBuild
                - [Troubleshooting AWS CodeBuild](https://docs.aws.amazon.com/codebuild/latest/userguide/troubleshooting.html)
                ### AWS CodeDeploy
                - [Troubleshooting CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/troubleshooting.html)
                - [Monitoring deployments with CloudWatch alarms in CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/monitoring-create-alarms.html)
                - [Working with deployment configurations in CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations.html)
                - [Scale-out events during a deployment](https://docs.aws.amazon.com/codedeploy/latest/userguide/integrations-aws-auto-scaling.html#integrations-aws-auto-scaling-behaviors-mixed-environment)
                - [elb-v2/common_functions.sh](https://github.com/aws-samples/aws-codedeploy-samples/blob/master/load-balancing/elb-v2/common_functions.sh)
                ### AWS CloudFormation
                - [Troubleshooting CloudFormation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/troubleshooting.html)
                - [Handling circular dependency errors in AWS CloudFormation](https://aws.amazon.com/blogs/infrastructure-and-automation/handling-circular-dependency-errors-in-aws-cloudformation/)
                ### CloudWatch synthetic monitoring
                - [Using synthetic monitoring](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries.html)
            - name: "Analyzing incidents regarding failed processes (e.g, auto scaling, Amazon ECS, Amazon EKS)"
              content: |
                ### Auto Scaling
                - [Troubleshoot Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/CHAP_Troubleshooting.html)
                ### Amazon ECS
                - [Amazon ECS troubleshooting](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/troubleshooting.html)
                ### Amazon EKS
                - [Amazon EKS](https://docs.aws.amazon.com/eks/latest/userguide/troubleshooting.html)
    - id: "6"
      name: "Security and Compliance (17%)"
      content: |
        ### AWS Security Maturity Model
        - [Welcome to the AWS Security Maturity Model](https://maturitymodel.security.aws.dev/en/)
        ### AWS Security Incident Response Guide
        - [AWS Security Incident Response Guide](https://docs.aws.amazon.com/whitepapers/latest/aws-security-incident-response-guide/aws-security-incident-response-guide.html)
      taskStatements:
        - id: "6.1"
          name: "Implement techniques for identity and access management at scale."
          content: |
            ### WhitePaper
            [Identity Management & Access Control capability](https://docs.aws.amazon.com/whitepapers/latest/establishing-your-cloud-foundation-on-aws/identity-management-access-control-capability.html)
          knowledgeOf:
            - name: "Appropriate usage of different IAM entities for human and machine access (e.g, users, groups, roles, identity providers, identity-based policies, resource-based policies, session policies)"
              content: |
                ### IAM
                - [IAM users](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users.html)
                - [IAM user groups](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_groups.html)
                - [IAM roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html)
                - [Identity providers and federation](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers.html)
                - [Identity-based policies and resource-based policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_identity-vs-resource.html)
                - [Policies and permissions in IAM](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html)
            - name: "Identity federation techniques (e.g, using IAM identity providers and AWS Single Sign-On)"
              content: |
                ### IAM
                - [About web identity federation](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html)
                - [About SAML 2.0-based federation](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html)
                - [aws:FederatedProvider](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_condition-keys.html#condition-keys-federatedprovider)
                ### SDK JavaScript
                - [Using Web Federated Identity to Authenticate Users](https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/loading-browser-credentials-federated-id.html)
            - name: "Permission management delegation by using IAM permissions boundaries"
              content: |
                ### AWS Security Blog
                - [Delegate permission management to developers by using IAM permissions boundaries](https://aws.amazon.com/fr/blogs/security/delegate-permission-management-to-developers-using-iam-permissions-boundaries/)
                  - Allow trusted employee to modify IAM role for an application, but within boundaries
                  - Administrator defines a set permission "dynamodb:PutItem", "dynamodb:UpdateItem", "dynamodb:DeleteItem"
                  - Developer can set a role with "dynamodb:*" but it will be restricted to the permissions above
                  - Steps for IAM administrator:
                    - Define the permissions boundary by creating a customer-managed policy.
                    - Create and attach a permissions policy to allow an employee to create roles, but only with a permissions boundary and a name that meets a specific convention.
                    - Create and attach a permissions policy to allow an employee to pass this role to Amazon EC2.
                  - Steps for Employee:
                    - Create a role with the required permissions boundary.
                    - Attach a permissions policy to the role.
            - name: "Organizational SCPs"
              content: |
                ### AWS Organizations
                - [Service control policies (SCPs)](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scps.html)
          skillsIn:
            - name: "Designing policies to enforce least privilege access"
              content: |
                ### AWS Well-Architected Framework
                - [SEC03-BP02 Grant least privilege access](https://docs.aws.amazon.com/wellarchitected/latest/framework/sec_permissions_least_privileges.html)
                - [Security best practices in IAM](https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html)
                  - [Apply least-privilege permissions](https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#grant-least-privilege)
            - name: "Implementing role-based and attribute-based access control patterns"
              content: |
                ### AWS Prescriptive Guidance
                - [Types of access control](https://docs.aws.amazon.com/prescriptive-guidance/latest/saas-multitenant-api-access-authorization/access-control-types.html)
                  - RBAC defines permissions based on a person's job function
                  - Attribute-based access control (ABAC) determines access to resources based on attributes.
                ### IAM
                - [What is ABAC for AWS?](https://docs.aws.amazon.com/IAM/latest/UserGuide/introduction_attribute-based-access-control.html)
                  - You can attach tags to IAM resources, including IAM entities (users or roles) and to AWS resources.
                  - ABAC policies can be designed to allow operations when the principal's tag matches the resource tag
                  - Use employee attributes from your corporate directory with ABAC. You can configure your SAML-based or web identity provider to pass session tags to AWS. When your employees federate into AWS, their attributes are applied to their resulting principal in AWS. You can then use ABAC to allow or deny permissions based on those attributes.
            - name: "Automating credential rotation for machine identities (e.g, Secrets Manager)"
              content: |
                ### Secret Manager
                - [Rotate AWS Secrets Manager secrets](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html)
                  - Secrets Manager rotation uses an AWS Lambda function 
                - [Rotation Function Example](https://github.com/aws-samples/aws-secrets-manager-rotation-lambdas/blob/master/SecretsManagerRDSMariaDBRotationSingleUser/lambda_function.py)
            - name: "Managing permissions to control access to human and machine identities (e.g, enabling multi-factor authentication [MFA], AWS Security Token Service [AWS STS], IAM profiles)"
              content: |
                ### IAM
                - [Using multi-factor authentication (MFA) in AWS](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa.html)
                - [Temporary security credentials in IAM](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html)
                - [Using instance profiles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2_instance-profiles.html)
        - id: "6.2"
          name: "Apply automation for security controls and data protection."
          knowledgeOf:
            - name: "Network security components (e.g, security groups, network ACLs, routing, AWS Network Firewall, AWS WAF, AWS Shield)"
              content: |
                ### VPC
                - [Security groups](https://docs.aws.amazon.com/vpc/latest/userguide/security-groups.html)
                - [Control traffic to subnets using network ACLs](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html)
                - [Configure route tables](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html)
                ### Network Firewall
                - [What is AWS Network Firewall?](https://docs.aws.amazon.com/network-firewall/latest/developerguide/what-is-aws-network-firewall.htm)
                - [Filter network traffic using AWS Network Firewall](https://docs.aws.amazon.com/vpc/latest/userguide/network-firewall.html)
                ### AWS WAF, AWS Firewall Manager, and AWS Shield Advanced
                - [AWS WAF](https://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html#waf-intro)
                  - Protects paths with 403
                  - Counts requests, Capcha
                - [AWS Shield](https://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html#ddos-intro)
                  - DDOoS
                  - Shield Standard > no cost , Shiels advance > cost
                  - Shield Advanced options and features include automatic application layer DDoS mitigation, advanced event visibility, and dedicated support from the Shield Response Team (SRT)
                - [AWS Firewall Manager](https://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html#fms-intro)
                  - AWS Firewall Manager simplifies your administration and maintenance tasks across previously mentionned products                  
            - name: "Certificates and public key infrastructure (PKI)"
              content: |
                ### AWS cryptography services
                - [AWS public key infrastructure (PKI) services and tools](https://docs.aws.amazon.com/crypto/latest/userguide/awspki-service-toplevel.html)
                  - [AWS Certificate Manager](https://docs.aws.amazon.com/crypto/latest/userguide/awspki-service-acm.html)
                    - ++ wildcard certificate
                  - [AWS Private Certificate Authority](https://docs.aws.amazon.com/crypto/latest/userguide/awspki-service-pca.html)
            - name: "Data management (e.g, data classification, encryption, key management, access controls)"
              content: |
                ### AWS WhitePaper
                - [Data classification overview](https://docs.aws.amazon.com/whitepapers/latest/data-classification/data-classification-overview.html)
                - [Data Encryption](https://docs.aws.amazon.com/whitepapers/latest/introduction-aws-security/data-encryption.html)
                ### S3
                - [Protecting data with encryption](https://docs.aws.amazon.com/AmazonS3/latest/userguide/UsingEncryption.html)
                ### Encrypting File Data with Amazon Elastic File System
                - [Encryption of Data at Rest](https://docs.aws.amazon.com/whitepapers/latest/efs-encrypted-file-systems/encryption-of-data-at-rest.html)
                ### RDS
                - [Encrypting Amazon RDS resources](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html)
                ### Systems Manager
                - [Data protection in AWS Systems Manager](https://docs.aws.amazon.com/systems-manager/latest/userguide/data-protection.html)
                ### KMS
                - [AWS Key Management Service](https://docs.aws.amazon.com/kms/latest/developerguide/overview.html)
                ### Access Control with IAM
                - [What is IAM?](https://docs.aws.amazon.com/IAM/latest/UserGuide/introduction.html)
          skillsIn:
            - name: "Automating the application of security controls in multi-account and multi-Region environments (e.g, Security Hub, Organizations, AWS Control Tower, Systems Manager)"
              content: |
                ### Security Hub
                - [What is AWS Security Hub?](https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html)
                ### Organizations
                - [Manage Accounts Through AWS Organizations](https://docs.aws.amazon.com/controltower/latest/userguide/organizations.html)
                ### Control Tower
                - [What Is AWS Control Tower?](https://docs.aws.amazon.com/controltower/latest/userguide/what-is-control-tower.html)
                  - Landing zone in an hour
                  - Built on top of trusted and reliable AWS services including AWS Service Catalog, AWS IAM Identity Center and AWS Organizations.
                ### Systems Manager
                - [Running automations in multiple AWS Regions and accounts](https://docs.aws.amazon.com/systems-manager/latest/userguide/running-automations-multiple-accounts-regions.html)
            - name: "Combining security controls to apply defense in depth (e.g, AWS Certificate Manager [ACM], WAF, Config, Config rules, Security Hub, GuardDuty, security groups, network ACLs, Amazon Detective, Network Firewall)"
              content: |
                ### ReInvent 2019
                - [A defense-in-depth approach to building web applications](https://d1.awsstatic.com/events/reinvent/2019/REPEAT_1_A_defense-in-depth_approach_to_building_web_applications_SEC407-R1.pdf)
                ### AWS Security Blog
                - [Defense in depth using AWS Managed Rules for AWS WAF (part 1)](https://aws.amazon.com/fr/blogs/security/defense-in-depth-using-aws-managed-rules-for-aws-waf-part-1/)
                - [Deploying defense in depth using AWS Managed Rules for AWS WAF (part 2)](https://aws.amazon.com/fr/blogs/security/deploying-defense-in-depth-using-aws-managed-rules-for-aws-waf-part-2/)
                ### AWS Well Architected Framework
                - [Security Pillars](https://wa.aws.amazon.com/wellarchitected/2020-07-02T19-33-23/wat.pillar.security.en.html)
                ### Blog Cohesive Network
                - [AWS Defense in Depth Overview](https://www.cohesive.net/blog/aws-defense-in-depth-overview/)
                ### SlideShare
                - [Core strategies to develop defense in depth in AWS](https://www.slideshare.net/ShanePedenCISSPCISAM/core-strategies-to-develop-defense-in-depth-in-aws)
                ### GuardDuty
                - [What is Amazon GuardDuty?](https://docs.aws.amazon.com/guardduty/latest/ug/what-is-guardduty.html)
                ### Detective
                - [What is Amazon Detective?](https://docs.aws.amazon.com/detective/latest/adminguide/what-is-detective.html)
            - name: "Automating the discovery of sensitive data at scale (e.g, Amazon Macie)"
              content: |
                - [What is Amazon Macie?](https://docs.aws.amazon.com/macie/latest/user/what-is-macie.html)
            - name: "Encrypting data in transit and data at rest (e.g, AWS KMS, AWS CloudHSM, ACM)"
              content: |
                ### AWS cryptography services
                - [AWS cryptographic services and tools](https://docs.aws.amazon.com/crypto/latest/userguide/awscryp-overview.html)
                ### AWS WhitePaper
                - [Encrypting Data-at-Rest and Data-in-Transit](https://docs.aws.amazon.com/whitepapers/latest/logical-separation/encrypting-data-at-rest-and--in-transit.html)
                - [Protecting data at rest](https://docs.aws.amazon.com/wellarchitected/latest/security-pillar/protecting-data-at-rest.html)
                - [When to use AWS Key Management Service (AWS KMS)](https://docs.aws.amazon.com/crypto/latest/userguide/awscryp-choose-kms.html)
                ### AWS CloudHSM
                - [What is AWS CloudHSM?](https://docs.aws.amazon.com/cloudhsm/latest/userguide/introduction.html)
                - [When to use AWS CloudHSM](https://docs.aws.amazon.com/crypto/latest/userguide/awscryp-choose-hsm.html)
                ### Classic Elastic Load Balancer
                - [HTTPS listeners for your Classic Load Balancer](https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-https-load-balancers.html)
        - id: "6.3"
          name: "Implement security monitoring and auditing solutions."
          knowledgeOf:
            - name: "Security auditing services and features (e.g, CloudTrail, AWS Config, VPC Flow Logs, CloudFormation drift detection)"
              content: |
                ### Medium
                - [Using CloudTrail Logs to Detect Security Threats: Techniques and Queries for Unusual Resource Access Patterns, Failed Login Attempts, and More](https://medium.com/@prathameshghumade/using-cloudtrail-logs-to-detect-security-threats-techniques-and-queries-for-unusual-resource-87fe86fc97ac)
                ### CloudTrail
                - [Key CloudTrail Events To Monitor for Security in AWS](https://www.gorillastack.com/blog/real-time-events/important-aws-cloudtrail-security-events-tracking/)
                - [Using CloudTrail to identify unexpected behaviors in individual workloads](https://aws.amazon.com/fr/blogs/security/using-cloudtrail-to-identify-unexpected-behaviors-in-individual-workloads/)
                ### Config
                - [Prepare for an Audit in AWS Part 1 â€“ AWS Audit Manager, AWS Config, and AWS Artifact](https://aws.amazon.com/fr/blogs/mt/prepare-for-an-audit-in-aws-part-1-aws-audit-manager-aws-config-and-aws-artifact/)
                - [Prepare for an Audit in AWS Part 2 â€“ General Best Practices](https://aws.amazon.com/fr/blogs/mt/prepare-for-an-audit-in-aws-part-2-general-best-practices/)
                ### VPC Flow log
                - [Logging IP traffic using VPC Flow Logs](https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html)
                - [Querying Amazon VPC flow logs](https://docs.aws.amazon.com/athena/latest/ug/vpc-flow-logs.html)
                ### CloudFormation drift detection
                - [Detect drift on an entire CloudFormation stack](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/detect-drift-stack.html)
                - [Detect drift on individual stack resources](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/detect-drift-resource.html)
            - name: "AWS services for identifying security vulnerabilities and events (e.g, GuardDuty, Amazon Inspector, IAM Access Analyzer, AWS Config)"
              content: |
                ### GuardDuty
                - [Understanding Amazon GuardDuty findings](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_findings.html)
                - [Remediating security issues discovered by GuardDuty](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_remediate.html)
                ### Amazon Inspector
                - [Amazon Inspector FAQs](https://aws.amazon.com/inspector/faqs/?nc1=h_ls)
                - [Automate vulnerability management and remediation in AWS using Amazon Inspector and AWS Systems Manager â€“ Part 1](https://aws.amazon.com/blogs/mt/automate-vulnerability-management-and-remediation-in-aws-using-amazon-inspector-and-aws-systems-manager-part-1/)
                - [Automate vulnerability management and remediation in AWS using Amazon Inspector and AWS Systems Manager â€“ Part 2](https://aws.amazon.com/blogs/mt/automate-vulnerability-management-and-remediation-in-aws-using-amazon-inspector-and-aws-systems-manager-part-2/)
                ### IAM
                - [Using AWS Identity and Access Management Access Analyzer](https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html)
                - [Automate vulnerability management and remediation in AWS using Amazon Inspector and AWS Systems Manager â€“ Part 1](https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-findings-remediate.html)
                ### AWS Config
                - [Remediate noncompliant AWS Config rules with AWS Systems Manager Automation runbooks](https://aws.amazon.com/blogs/mt/remediate-noncompliant-aws-config-rules-with-aws-systems-manager-automation-runbooks/)
            - name: "Common cloud security threats (e.g, insecure web traffic, exposed AWS access keys, S3 buckets with public access enabled or encryption disabled)"
              content: |
                ### Blog
                - [12 CLOUD SECURITY ISSUES: RISKS, THREATS, AND CHALLENGES](https://www.crowdstrike.com/cybersecurity-101/cloud-security/cloud-security-risks-threats-challenges/)
                - [Main Cloud Security Issues and Threats in 2023](https://www.checkpoint.com/cyber-hub/cloud-security/what-is-cloud-security/top-cloud-security-issues-threats-and-concerns/)
                ### Framework for Incident Response Playbooks
                - [Playbooks](https://github.com/aws-samples/aws-customer-playbook-framework) : An example framework for customers to create, develop, and integrate security playbooks in preparation for potential attack scenarios when using AWS services.
                ### AWS Penetration test
                - [AWS Pentesting](https://cloud.hacktricks.xyz/pentesting-cloud/aws-security)
          skillsIn:
            - name: "Implementing robust security auditing"
              content: |
                ### AWS Audit Manager
                - [What is AWS Audit Manager?](https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html)
                ### AWS Security Blog
                - [Continuous compliance monitoring using custom audit controls and frameworks with AWS Audit Manage](https://aws.amazon.com/blogs/security/continuous-compliance-monitoring-using-custom-audit-controls-and-frameworks-with-aws-audit-manager/)
            - name: "Configuring alerting based on unexpected or anomalous security events"
              content: |
                ### AWS Security Incident Response Guide
                - [Visibility and alerting](https://docs.aws.amazon.com/whitepapers/latest/aws-security-incident-response-guide/visibility-and-alerting.html)
                ### AWS Security Hub
                - [Automated response and remediation](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-cloudwatch-events.html)
                ### AWS Macie
                - [Monitoring and processing Amazon Macie findings](https://docs.aws.amazon.com/macie/latest/user/findings-monitor.html)
                ### AWS Config
                - [Notifications that AWS Config Sends to an Amazon SNS topic](https://docs.aws.amazon.com/config/latest/developerguide/notifications-for-AWS-Config.html)
                ### AWS Trusted Advisor
                - [Monitoring and logging for AWS Trusted Advisor](https://docs.aws.amazon.com/awssupport/latest/user/cloudwatch-ta.html)
                ### AWS Inspector
                - [Creating custom responses to Amazon Inspector findings with Amazon EventBridge](https://docs.aws.amazon.com/inspector/latest/user/findings-managing-automating-responses.html)
                ### AWS GuardDuty
                - [Creating custom responses to GuardDuty findings with Amazon CloudWatch Events](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_findings_cloudwatch.html)
            - name: "Analyzing logs, metrics, and security findings"
              content: |
                ### AWS Security Incident Response Guide
                - [Alert sources](https://docs.aws.amazon.com/whitepapers/latest/aws-security-incident-response-guide/alert-sources.html)